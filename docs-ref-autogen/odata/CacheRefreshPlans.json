{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "OData Service for namespace Model",
    "description": "This OData service is typically located at http://localhost/reports/api/v2.0"
  },
  "schemes": [
    "http"
  ],
  "host": "localhost",
  "basePath": "/service-root",
  "tags": [
    {
      "name": "CacheRefreshPlans"
    },
    {
      "name": "CatalogItems"
    },
    {
      "name": "Comments"
    },
    {
      "name": "DataSets"
    },
    {
      "name": "DataSources"
    },
    {
      "name": "ExcelWorkbooks"
    },
    {
      "name": "ExecutionLogEntries"
    },
    {
      "name": "Extensions"
    },
    {
      "name": "FavoriteItems"
    },
    {
      "name": "Folders"
    },
    {
      "name": "Kpis"
    },
    {
      "name": "LinkedReports"
    },
    {
      "name": "Me"
    },
    {
      "name": "MobileReports"
    },
    {
      "name": "PowerBIReports"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Resources"
    },
    {
      "name": "SafeGetSystemResourceContent"
    },
    {
      "name": "Schedules"
    },
    {
      "name": "ServiceState"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "System"
    },
    {
      "name": "SystemResources"
    }
  ],
  "definitions": {
    "Model.BulkOperationsResult": {
      "type": "object",
      "properties": {
        "FailedOperations": {
          "type": "array",
          "description": "An array of strings indicating which of the attempted operations have failed.  Successful operations do not generate an entry.",
          "format": "[]"
        },
        "HasErrors": {
          "type": "boolean",
          "description": "Boolean value set to true if any of the attempted operations has failed.",
          "format": "true|false"
        }
      },
      "title": "BulkOperationsResult",
      "description": "Object that contains the results of an attempted bulk operation (simultaneous operation on multiple objects in one request)."
    },
    "Model.Comment": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "description": "An integer value that specifies a unique identifier for the comment.",
          "format": "int64"
        },
        "ItemId": {
          "type": "string",
          "description": "A uuid value that specifies a pointer to the CatalogItem item to which the comment is attached.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "UserName": {
          "type": "string",
          "description": " A string value that represents the user that created the comment item.",
          "format": "string"
        },
        "ThreadId": {
          "type": "string",
          "description": "An integer value that specifies an identifier for the thread of the comment. A comment's thread can be used to group comments that are a response to each other in one grouping.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "AttachmentPath": {
          "type": "string",
          "description": "A string value that specifies the server path to an attachment that is part of the comment.",
          "format": "string"
        },
        "Text": {
          "type": "string",
          "description": "A string value that contains the text of the Comment",
          "format": "string"
        },
        "CreatedDate": {
          "type": "string",
          "description": "A date-time value that represents the original creation date for the Comment.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "ModifiedDate": {
          "type": "string",
          "description": "A string value that contains the date-time of the last modification to the Comment.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        }
      },
      "title": "Comment",
      "description": "An object that specifies a comment that is attached to a CatalogItem."
    },
    "Model.DrillthroughTarget": {
      "type": "object",
      "properties": {},
      "title": "DrillthroughTarget",
      "description": "An object that specifies the type of the target of a drillthrough operation."
    },
    "Model.CredentialRetrievalType": {
      "type": "object",
      "properties": {},
      "title": "CredentialRetrievalType",
      "description": "An enumeration of values that specify how credentials should be retrieved to establish connection to an external data source."
    },
    "Model.DataSetParameterInfo": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for a DataSet parameter.",
          "format": "string"
        },
        "DefaultValue": {
          "type": "string",
          "description": "A string value that specifies the default value for a DataSet parameter.",
          "format": "string"
        },
        "Nullable": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the ReportParameter is allowed to be null.",
          "format": "true|false"
        },
        "DataType": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ReportParameterType"
            },
            {
              "description": "An enumeration value that specifies the data type of the DataSet parameter."
            }
          ]
        },
        "IsExpression": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether a DataSet parameter is an expression.",
          "format": "true|false"
        },
        "IsMultiValued": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the DataSet parameter is multi-valued.",
          "format": "true|false"
        }
      },
      "title": "DataSetParameterInfo",
      "description": "An object that specifies metadata information for a  DataSet parameter."
    },
    "Model.Extension": {
      "type": "object",
      "properties": {
        "ExtensionType": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ExtensionType"
            },
            {
              "description": "An enumeration value specifying the extension type."
            }
          ]
        },
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the Extension. This name will typically be displayed in the user interface.",
          "format": "string"
        },
        "LocalizedName": {
          "type": "string",
          "description": "A string value that specifies a localized name for the Extension.",
          "format": "string"
        },
        "Visible": {
          "type": "boolean",
          "description": "A boolean value that indicates if the Extension is visible. If false, the item will generally not appear in listings of available extensions.",
          "format": "true|false"
        }
      },
      "title": "Extension",
      "description": "An object that holds the definition of a reporting services extension."
    },
    "Model.DeliveryExtension": {
      "type": "object",
      "properties": {
        "IsImmutable": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether this delivery extension is immutable.",
          "format": "true|false"
        },
        "DefaultDeliveryExtension": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether this is the default delivery extension.",
          "format": "true|false"
        }
      },
      "title": "DeliveryExtension",
      "description": "DeliveryExtension is derived from Extension and includes all of its properties. It specifies  properties specific to extensions that deliver reports."
    },
    "Model.CatalogItem": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this CatalogItem can be referenced in requests or by other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the CatalogItem. This name will typically be displayed for the user in the user interface.",
          "format": "string"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text about the CatalogItem.",
          "format": "string"
        },
        "Path": {
          "type": "string",
          "description": "A string value that contains the full server path for the CatalogItem. Path is defined as an AlternateKey on CatalogItem and can be used as the parameter by which CatalogItem can be referenced in requests or by other defined objects.",
          "format": "string"
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.CatalogItemType"
            },
            {
              "description": "An enumeration value that specifies the type of the CatalogItem."
            }
          ]
        },
        "Hidden": {
          "type": "boolean",
          "description": "A boolean value that indicates if the CatalogItem is hidden.  If true, the item will generally not appear in listings of CatalogItems within the parent item.",
          "format": "true|false"
        },
        "Size": {
          "type": "integer",
          "description": "An int64 value that contains the size of the CatalogItem in bytes.",
          "format": "int64"
        },
        "ModifiedBy": {
          "type": "string",
          "description": "A string value that contains the network username of the last user to modify the CatalogItem.",
          "format": "string"
        },
        "ModifiedDate": {
          "type": "string",
          "description": "A string value that contains the date-time of the last modification to the CatalogItem.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "CreatedBy": {
          "type": "string",
          "description": "A string value that represents the network username of the user that originally created the CatalogItem.",
          "format": "string"
        },
        "CreatedDate": {
          "type": "string",
          "description": "A date-time value that represents the original creation date for the CatalogItem.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "ParentFolderId": {
          "type": "string",
          "description": "A UUID value that contains the Id property of the Folder CatalogItem that contains this CatalogItem.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "ContentType": {
          "type": "string",
          "description": "A string value that contains a SOAP MIME-type that is associated with the CatalogItem.",
          "format": "string"
        },
        "Content": {
          "type": "array",
          "description": "A string value that contains binary encoding by base64url encoding rules. The value of this property is not processed by the server. In object creation the server recieves and stores a value, and in object retrieval, the server returns the previously stored value.",
          "format": "[]"
        },
        "Properties": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.Property"
            },
            {
              "description": "An object that contains an array of properties for the CatalogItem."
            }
          ]
        },
        "IsFavorite": {
          "type": "boolean",
          "description": "A boolean value that specifies whether the CatalogItem is designated as a Favorite.",
          "format": "true|false"
        }
      },
      "title": "CatalogItem",
      "description": "CatalogItem is an abstract type that contains the common properties of all the types of catalog items. Hence, it is the BaseType from which the other catalog item types are derived."
    },
    "Model.ExcelWorkbook": {
      "type": "object",
      "properties": {},
      "title": "ExcelWorkbook",
      "description": "An object that is the CatalogItem for a ExcelWorkbook.  This object is derived from CatalogItem and therefore contains all of its properties, plus additional properties for the Report item."
    },
    "Model.IssueType": {
      "type": "object",
      "properties": {},
      "title": "IssueType",
      "description": "An enumeration of values that specify the type of an identified issue to be used for notification."
    },
    "Model.ItemExecutionType": {
      "type": "object",
      "properties": {},
      "title": "ItemExecutionType",
      "description": "An enumeration that specifies whether the item's execution is with live data, cached data, or based on a data snapshot."
    },
    "Model.KpiSharedDataItemAggregation": {
      "type": "object",
      "properties": {},
      "title": "KpiSharedDataItemAggregation",
      "description": "An enumeration of values that specify the available types of aggregation functions for a shared KPI data item."
    },
    "Model.Notification": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this Notification can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "IssueType": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.IssueType"
            },
            {
              "description": "An enumeration value that specifies the type of the issue for this notification."
            }
          ]
        }
      },
      "title": "Notification",
      "description": "An object that specifies an issue for which notification may be given and an identifier by which the Notification can be referenced."
    },
    "Model.PowerBIReport": {
      "type": "object",
      "properties": {
        "HasDataSources": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the PowerBIReport has DataSources.",
          "format": "true|false"
        }
      },
      "title": "PowerBIReport",
      "description": "An object that is the CatalogItem for a Power BI Report. This object is derived from CatalogItem and therefore contains all of its properties, plus additional properties for the PowerBIReport item."
    },
    "Model.Query": {
      "type": "object",
      "properties": {
        "CommandText": {
          "type": "string",
          "description": "A string value that specifies the command text for a query.",
          "format": "string"
        },
        "Timeout": {
          "type": "string",
          "description": "An integer value that specifies the query timeout in seconds.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        }
      },
      "title": "Query",
      "description": "An object that contains the command text and timeout value for a query to an external data source."
    },
    "Model.ReportParameterState": {
      "type": "object",
      "properties": {},
      "title": "ReportParameterState",
      "description": "An enumeration that specifies possible values for the state of a report parameter as to whether it has valid or missing values, outstanding dependencies, or values that are unavailable."
    },
    "Model.ReportParameterType": {
      "type": "object",
      "properties": {},
      "title": "ReportParameterType",
      "description": "An enumeration of values that specify the data type of a report parameter."
    },
    "Model.ScheduleRecurrence": {
      "type": "object",
      "properties": {
        "MinuteRecurrence": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.MinuteRecurrence"
            },
            {
              "description": "The recurrence of the schedule, if the schedule runs on a per-minute basis."
            }
          ]
        },
        "DailyRecurrence": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.DailyRecurrence"
            },
            {
              "description": "The recurrence of the schedule, if the schedule runs on a daily basis."
            }
          ]
        },
        "WeeklyRecurrence": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.WeeklyRecurrence"
            },
            {
              "description": "The recurrence of the schedule, if the schedule runs on a weekly basis."
            }
          ]
        },
        "MonthlyRecurrence": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.MonthlyRecurrence"
            },
            {
              "description": "The recurrence of the schedule, if the schedule runs on a monthly basis."
            }
          ]
        },
        "MonthlyDOWRecurrence": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.MonthlyDOWRecurrence"
            },
            {
              "description": "The recurrence of the schedule, if the schedule runs on selected weekdays."
            }
          ]
        }
      },
      "title": "ScheduleRecurrence",
      "description": "An object that defines the recurrence of a schedule. When defining the recurrence, only one of the recurrence types can be set."
    },
    "Model.SystemResourceItem": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this SystemResourceItem can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        }
      },
      "title": "SystemResourceItem",
      "description": "A single item that is one component of a SystemResource."
    },
    "Model.SystemResourceType": {
      "type": "object",
      "properties": {},
      "title": "SystemResourceType",
      "description": "An enumeration of values that specify known system resource types (or 'unknown')."
    },
    "Model.MobileReportDataSetType": {
      "type": "object",
      "properties": {},
      "title": "MobileReportDataSetType",
      "description": "An enumeration of values that specify the known types for MobileReport DataSets."
    },
    "Model.MobileReportThumbnailType": {
      "type": "object",
      "properties": {},
      "title": "MobileReportThumbnailType",
      "description": "An enumeration of values that specify the available orientations for Thumbnails."
    },
    "Model.MobileReportResourceGroupType": {
      "type": "object",
      "properties": {},
      "title": "MobileReportResourceGroupType",
      "description": "An enumeration of values that specify the known types for MobileReport Resources."
    },
    "Model.PowerBIUserStatus": {
      "type": "object",
      "properties": {},
      "title": "PowerBIUserStatus",
      "description": "An enumeration of values that specify the status for a PowerBI user's session."
    },
    "Model.CacheRefreshPlan": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this CacheRefreshPlan can be referenced in the definition of other items.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Owner": {
          "type": "string",
          "description": "A string value that specifies the owner of the CacheRefreshPlan.",
          "format": "string"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text about the CacheRefreshPlan.",
          "format": "string"
        },
        "CatalogItemPath": {
          "type": "string",
          "description": "A string value that contains the fully qualified URL path location of the CatalogItem that represents the CacheRefreshPlan.",
          "format": "string"
        },
        "EventType": {
          "type": "string",
          "description": "Event that will be logged as, 'RefreshCache'.",
          "format": "string"
        },
        "LastRunTime": {
          "type": "string",
          "description": "A string value that contains the latest time that the CacheRefreshPlan was run.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "LastStatus": {
          "type": "string",
          "description": "A string value that describes the success or failure of the most recent refresh.",
          "format": "string"
        },
        "ModifiedBy": {
          "type": "string",
          "description": "A string value that contains the network username of the last user to modify the CacheRefreshPlan.",
          "format": "string"
        },
        "ModifiedDate": {
          "type": "string",
          "description": "A string value that contains the date-time of the last modification to the CacheRefreshPlan.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "ParameterValues": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ParameterValue"
            },
            {
              "description": "An array of parameter values to be used as the values for parameters for the CacheRefreshPlan. All parameters without a default value MUST have a value specified. If a value is specified for parameters with a default value, this value overrides the default value."
            }
          ]
        }
      },
      "title": "CacheRefreshPlan",
      "description": "An object that specifies a plan for data cache refresh.  The plan can be stored and re-used by multiple items."
    },
    "Model.CacheOptions": {
      "type": "object",
      "properties": {},
      "title": "CacheOptions",
      "description": "An object that specifies options for a data cache."
    },
    "Model.ReportHistorySnapshotsOptions": {
      "type": "object",
      "properties": {
        "ManualCreationEnabled": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether manual snapshot creation is enabled for this snapshot.",
          "format": "true|false"
        },
        "KeepExecutionSnapshots": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether execution snapshots are kept.",
          "format": "true|false"
        },
        "UseDefaultSystemLimit": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether the default system limit is used for this history snapshot.",
          "format": "true|false"
        },
        "ScopedLimit": {
          "type": "integer",
          "description": "Integer value indicating how many snapshots to keep.",
          "format": "int32"
        },
        "SystemLimit": {
          "type": "integer",
          "description": "Integer value indicating how many snapshots can be kept system wide.  Default (-1) is unlimited.",
          "format": "int32"
        },
        "Schedule": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ScheduleReference"
            },
            {
              "description": "An object that specifies the schedule for making snapshots for this item."
            }
          ]
        }
      },
      "title": "ReportHistorySnapshotsOptions",
      "description": "An object that specifies options for a Report history snapshot."
    },
    "Model.DataSource": {
      "type": "object",
      "properties": {
        "IsEnabled": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether the DataSource is enabled for use.",
          "format": "true|false"
        },
        "ConnectionString": {
          "type": "string",
          "description": "A string value that can be passed to a data source in order to being the process of establishing connection.",
          "format": "string"
        },
        "DataSourceType": {
          "type": "string",
          "description": "DataSource Extension like 'SQL'",
          "format": "string"
        },
        "IsOriginalConnectionStringExpressionBased": {
          "type": "boolean",
          "description": "Indicates whether the original connection string for the data source was expression-based.",
          "format": "true|false"
        },
        "IsConnectionStringOverridden": {
          "type": "boolean",
          "description": "Specifies whether original connection string is overridden.",
          "format": "true|false"
        },
        "CredentialsByUser": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.CredentialsSuppliedByUser"
            },
            {
              "description": "An object that specifies how credentials supplied by user are prompted for and handled for access to the DataSource."
            }
          ]
        },
        "CredentialsInServer": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.CredentialsStoredInServer"
            },
            {
              "description": "An object that specifies credentials already stored on the server to use and how to utilize them, to access the DataSource."
            }
          ]
        },
        "IsReference": {
          "type": "boolean",
          "description": "Indicates whether the is a reference to a shared data source or an embedded data source.",
          "format": "true|false"
        },
        "DSIDNum": {
          "type": "string",
          "description": " An Int64 value that is for internal use only. (TODO Comment from bug bash: 'This is not present'.  Note that it was discussed during the OIPI phase that it be removed, so if it is confirmed that it is removed, needs to be removed here)",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Subscriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.Subscription"
            },
            {
              "description": "Navigation property to get all subscriptions associated with this data source item."
            }
          ]
        }
      },
      "title": "DataSource",
      "description": "An object that defines information about an external source of data that can be connected to as a source of data for reporting services. DataSource is derived from CatalogItem and therefore includes all properties defined by CatalogItem."
    },
    "Model.ReportParameterDefinition": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the ReportParameter. This name will typically be displayed in the user interface.",
          "format": "string"
        },
        "ValidValues": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ValidValue"
            },
            {
              "description": "An array of items of type ValidValue that define the value (or values if multi-valued) for the parameter."
            }
          ]
        },
        "ValidValuesIsNull": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the ValidValues property is NULL.",
          "format": "true|false"
        },
        "Nullable": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the ReportParameter is allowed to be null.",
          "format": "true|false"
        },
        "AllowBlank": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether blank is allowed for the report parameter.",
          "format": "true|false"
        },
        "MultiValue": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the ReportParameter is multi-valued.",
          "format": "true|false"
        },
        "Prompt": {
          "type": "string",
          "description": " A string value that specifies text to be used to prompt a user for a value of a ReportParameter.",
          "format": "string"
        },
        "PromptUser": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the user should be prompted for the value for the ReportParameter.",
          "format": "true|false"
        },
        "QueryParameter": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether paramter is query based.",
          "format": "true|false"
        },
        "DefaultValuesQueryBased": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the default values for parameters are obtained from a query (instead of being static specified values).",
          "format": "true|false"
        },
        "ValidValuesQueryBased": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the valid values for parameters are obtained from a query (instead of being static specified values).",
          "format": "true|false"
        },
        "DefaultValues": {
          "type": "array",
          "description": " An array of string values that specify the default values for the parameter. If the parameter is multi-valued then the array can have more than one entry.",
          "format": "[]"
        },
        "DefaultValuesIsNull": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the DefaultValues property is NULL.",
          "format": "true|false"
        },
        "ErrorMessage": {
          "type": "string",
          "description": "Error returned when validating parameters.",
          "format": "string"
        }
      },
      "title": "ReportParameterDefinition",
      "description": "An object that specifies the metadata definition of a parameter for a report."
    },
    "Model.ParameterValue": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string that contains the name of the parameter.",
          "format": "string"
        },
        "Value": {
          "type": "string",
          "description": "A string that contains the value for the parameter.",
          "format": "string"
        },
        "IsValueFieldReference": {
          "type": "boolean",
          "description": "A boolean value that indicates if the parameter's value is a field reference.",
          "format": "true|false"
        }
      },
      "title": "ParameterValue",
      "description": "An object that specifies a parameter's value, as a name-value pair."
    },
    "Model.SystemResource": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this SystemResource can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.SystemResourceType"
            },
            {
              "description": "An enumeration value that specifies the type of the system resource."
            }
          ]
        },
        "TypeName": {
          "type": "string",
          "description": "Type name of the resource, like 'UniversalBrand'",
          "format": "string"
        },
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the SystemResource.",
          "format": "string"
        },
        "Version": {
          "type": "string",
          "description": "A string value that specifies the version of the SystemResource.",
          "format": "string"
        }
      },
      "title": "SystemResource",
      "description": "An object that serves as a generalized container for resources that can be retrieved. The caller must be able to interpret the contents of the returned item."
    },
    "Model.SystemResourcePackage": {
      "type": "object",
      "properties": {},
      "title": "SystemResourcePackage",
      "description": "An object that contains the binary contents of a SystemResource. The caller must be able to interpret the contents of the package."
    },
    "Model.ExpirationReference": {
      "type": "object",
      "properties": {
        "Minutes": {
          "type": "integer",
          "description": "Number of minutes until expiration.",
          "format": "int32"
        },
        "Schedule": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ScheduleReference"
            },
            {
              "description": "An object that contains a definition of an expiration schedule or a reference to an existing defintion of a schedule to be used for expiration"
            }
          ]
        }
      },
      "title": "ExpirationReference",
      "description": "An object that contains a specification for cache expiration, expressed either in minutes or by a schedule."
    },
    "Model.ReportParameterVisibility": {
      "type": "object",
      "properties": {},
      "title": "ReportParameterVisibility",
      "description": "An enumeration of values that specify the visibility of a report parameter, as to whether it is visible at runtime, hidden at runtime, or internal, meaning only visible in the definition."
    },
    "Model.UrlDrillthroughTarget": {
      "type": "object",
      "properties": {
        "Url": {
          "type": "string",
          "description": "A string value that specifies the URL.",
          "format": "string"
        },
        "DirectNavigation": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether a drillthrough operation by the user bypasses the report and goes directly to a URL.",
          "format": "true|false"
        }
      },
      "title": "UrlDrillthroughTarget",
      "description": "An object that specifies information about a drillthrough target that is a URL."
    },
    "Model.AllowedAction": {
      "type": "object",
      "properties": {
        "Action": {
          "type": "string",
          "description": "The allowed action.",
          "format": "string"
        }
      },
      "title": "AllowedAction",
      "description": "An object that specifies an allowed actions on a catalog item."
    },
    "Model.V2.CatalogItemAccessToken": {
      "type": "object",
      "properties": {
        "Token": {
          "type": "array",
          "description": "The token content.",
          "format": "[]"
        }
      },
      "title": "CatalogItemAccessToken",
      "description": "An object that that contains an access token for a catalog item."
    },
    "Model.ExecutionLogInfo": {
      "type": "object",
      "properties": {
        "LogEntryId": {
          "type": "integer",
          "description": "Unique key that identifies the execution log entry in catalog.",
          "format": "int64"
        },
        "ItemPath": {
          "type": "string",
          "description": "A string value that specifies the URL path to the item whose information is logged in this object instance.",
          "format": "string"
        },
        "StartTime": {
          "type": "string",
          "description": "A date-time value that specifies the start time for this log entry's activity.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "EndTime": {
          "type": "string",
          "description": "A date-time value that specifies the end time for this log entry's activity.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "Format": {
          "type": "string",
          "description": "A string value that describes the rendering format of the execution instance.",
          "format": "string"
        },
        "Parameters": {
          "type": "string",
          "description": "Report parameter values separated by '&'",
          "format": "string"
        },
        "Status": {
          "type": "integer",
          "description": "An integer value that specifies the status.",
          "format": "int64"
        },
        "ByteCount": {
          "type": "integer",
          "description": "An integer value that specifies the byte count for the log.",
          "format": "int64"
        },
        "ProcessingTime": {
          "type": "integer",
          "description": "An integer value that specifies the processing time for this log entry's activity in milliseconds?",
          "format": "int32"
        },
        "RenderingTime": {
          "type": "integer",
          "description": "An integer value that specifies the rendering time for this log entry's activity in milliseconds?",
          "format": "int32"
        },
        "DataRetrievalTime": {
          "type": "integer",
          "description": "An integer value that specifies the data retrieval time for this log entry's activity in milliseconds?",
          "format": "int32"
        },
        "ExecutionId": {
          "type": "string",
          "description": "A string value that is a unique identifier for the execution instance.",
          "format": "string"
        },
        "AdditionalInfo": {
          "type": "string",
          "description": "The AdditionalInfo field is an XML property bag or structure containing additional information about the execution. The contents can be different for each row in the log.",
          "format": "string"
        }
      },
      "title": "ExecutionLogInfo",
      "description": "An object that represents one entry in the Reporting Services server log file."
    },
    "Model.ExecutionLogEventType": {
      "type": "object",
      "properties": {},
      "title": "ExecutionLogEventType",
      "description": "An enumeration of event types that appear in the execution log."
    },
    "Model.ExecutionLogExecType": {
      "type": "object",
      "properties": {},
      "title": "ExecutionLogExecType",
      "description": "An enumeration of execution types that appear in the execution log."
    },
    "Model.ExecutionLogLevel": {
      "type": "object",
      "properties": {},
      "title": "ExecutionLogLevel",
      "description": "An enumeration of values that specify the level of verbosity in the execution log."
    },
    "Model.FavoriteItem": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The uniquie identifier of the catalog item that is marked as a favorite.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Item": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.CatalogItem"
            },
            {
              "description": "The catalog item that is marked as favorite."
            }
          ]
        }
      },
      "title": "FavoriteItem",
      "description": "An object that a reference to a catalog item that the user has marked as favorite."
    },
    "Model.HistorySnapshot": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The uniquie identifier of the history snapshot.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "HistoryId": {
          "type": "string",
          "description": "History snapshot id by date created.",
          "format": "string"
        },
        "CreationDate": {
          "type": "string",
          "description": "Creation date of history snapshot",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "Size": {
          "type": "integer",
          "description": "Size of the history snapshot",
          "format": "int32"
        }
      },
      "title": "HistorySnapshot",
      "description": "An object that contains hisotory snapshot information."
    },
    "Model.HistorySnapshotOptions": {
      "type": "object",
      "properties": {
        "CatalogItemId": {
          "type": "string",
          "description": "The Id of catalog item that this HistorySnapshotOptions belows to.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "HistorySnapshotsOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ReportHistorySnapshotsOptions"
            },
            {
              "description": "The history snapshot options for catalog item."
            }
          ]
        }
      },
      "title": "HistorySnapshotOptions",
      "description": "An object that has a reference to a history snapshot options for given catalog."
    },
    "Model.ReportParameterDefinitionPatch": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name of the report parameter.",
          "format": "string"
        },
        "Prompt": {
          "type": "string",
          "description": "A string value that specifies prompt text that can be used to prompt a user to enter a value for the parameter.",
          "format": "string"
        }
      },
      "title": "ReportParameterDefinitionPatch",
      "description": "An object that specifies the properties for a report parameter."
    },
    "Model.V2.ServiceState": {
      "type": "object",
      "properties": {
        "IsAvailable": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the server is operating and available to be accessed by this protocol.",
          "format": "true|false"
        },
        "RestrictedFeatures": {
          "type": "array",
          "description": "An array of strings that specify features restricted from the Report Server user, either due to security or due to the edition of the server being used.",
          "format": "[]"
        },
        "AllowedSystemActions": {
          "type": "array",
          "description": "An array of strings that specify actions allowed for the Report Server user, either due to security or due to the edition of the server being used.",
          "format": "[]"
        },
        "TimeZone": {
          "type": "string",
          "description": "A string value that specifies the time zone of the server.",
          "format": "string"
        },
        "UserHasFavorites": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the user has any favorite items specified.",
          "format": "true|false"
        },
        "AcceptLanguage": {
          "type": "string",
          "description": "A string value that is the content of the Accept-Language field in the header of the HTTP request. See [RFC7231] section 5.3.5. A client MAY send this content back in the appropriate field of the HTTP header in server requests.",
          "format": "string"
        },
        "RequireIntune": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the Microsoft Intune server management environment is required.",
          "format": "true|false"
        },
        "ProductType": {
          "type": "string",
          "enum": [
            "None",
            "SqlServerReportingServices",
            "PowerBiReportServer"
          ],
          "description": "An enumeration value that specifies the product type that the server is running."
        }
      },
      "title": "ServiceState",
      "description": "An object that specifies whether a server is available to be accessed by this API and additional information about the state of the server."
    },
    "Model.System": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this ReportServerInfo item can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "ReportServerAbsoluteUrl": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server.",
          "format": "string"
        },
        "ReportServerRelativeUrl": {
          "type": "string",
          "description": "A string value that specifies the Report Server Virtual Directory.",
          "format": "string"
        },
        "WebPortalRelativeUrl": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server Web Portal.",
          "format": "string"
        },
        "ProductName": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server Web Portal.",
          "format": "string"
        },
        "ProductVersion": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server Web Portal.",
          "format": "string"
        }
      },
      "title": "System",
      "description": "An object that specifies information about the Report Server server."
    },
    "Model.SystemPolicy": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "Placeholder Id needed to define SystemPolicy as EntityType. Does not need to be set in Request.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Policies": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.Policy"
            },
            {
              "description": "An array of objects of type Policy that specify the access policies to be applied to the system."
            }
          ]
        }
      },
      "title": "SystemPolicy",
      "description": "An object that specifies the system access policies."
    },
    "Model.UserSettings": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The User ID identifying the user.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "EmailAddress": {
          "type": "string",
          "description": "The email address that the user has set for email alert notifications",
          "format": "string"
        }
      },
      "title": "UserSettings",
      "description": "An Object that contains settings pertaining to user information."
    },
    "Model.ValidValue": {
      "type": "object",
      "properties": {
        "Label": {
          "type": "string",
          "description": "A string value that specifies the label for the ValidValue.",
          "format": "string"
        },
        "Value": {
          "type": "string",
          "description": "A string value that specifies the value of the ValidValue.",
          "format": "string"
        }
      },
      "title": "ValidValue",
      "description": "An object that contains a value that is valid for use in its context; in the form of a label-value pair."
    },
    "Model.CredentialsSuppliedByUser": {
      "type": "object",
      "properties": {
        "DisplayText": {
          "type": "string",
          "description": "A string value that contains text to use to prompt a user to supply credentials for connection to an external data source.",
          "format": "string"
        },
        "UseAsWindowsCredentials": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the credentials that the user supplied in response to a prompt should be used as Windows credentials.",
          "format": "true|false"
        }
      },
      "title": "CredentialsSuppliedByUser",
      "description": "An object that contains information about prompting a user for credentials for connecting to an external data source."
    },
    "Model.CredentialsStoredInServer": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string",
          "description": "A string value that contains the user name that will be used to connect to an external data source.",
          "format": "string"
        },
        "Password": {
          "type": "string",
          "description": "A string value that contains the password that will be used to connect to an external data source.",
          "format": "string"
        },
        "UseAsWindowsCredentials": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the supplied credentials should be used as Windows credentials.",
          "format": "true|false"
        },
        "ImpersonateAuthenticatedUser": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the session should impersonate the user for the supplied credentials.",
          "format": "true|false"
        }
      },
      "title": "CredentialsStoredInServer",
      "description": "This object holds credentials for connection to an external data source. The object is stored on the report server, for later retrieval and utilization. NOTE this object represents a security risk, as its properties could be seen in plain text over the HTTP protocol; HTTPS is recommended."
    },
    "Model.DataSetField": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that contains the name for the DataSetField.",
          "format": "string"
        },
        "DataType": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ReportParameterType"
            },
            {
              "description": "An enumeration value that specifies the data type for the DataSetField."
            }
          ]
        }
      },
      "title": "DataSetField",
      "description": "An object that defines the field name and type for a DataSet field."
    },
    "Model.DataSetParameter": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name of the DataSet parameter.",
          "format": "string"
        },
        "Value": {
          "type": "string",
          "description": "A string value that specifies the value of the DataSet parameter.",
          "format": "string"
        }
      },
      "title": "DataSetParameter",
      "description": "An object that specifies a parameter value for a DataSet, in the form of a name-value pair."
    },
    "Model.DataSetSchema": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the DataSetSchema.",
          "format": "string"
        },
        "Fields": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.DataSetField"
            },
            {
              "description": "An array of DataSetField objects, each of which is a field in the DataSet."
            }
          ]
        },
        "Parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.DataSetParameterInfo"
            },
            {
              "description": "An array of DataSetParameterInfo objects, each of which is a parameter for the DataSet."
            }
          ]
        }
      },
      "title": "DataSetSchema",
      "description": "An object that specifies a schema for a DataSet."
    },
    "Model.DataSourceCheckResult": {
      "type": "object",
      "properties": {
        "IsSuccessful": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether connection to the data source was successful.",
          "format": "true|false"
        },
        "ErrorMessage": {
          "type": "string",
          "description": "A string value that contains any error message returned from an attempt to connect to a data source.",
          "format": "string"
        }
      },
      "title": "DataSourceCheckResult",
      "description": "An object that holds information about the result of checking for the ability to successfully connect to a data source defined by a DataSource object."
    },
    "Model.PowerBIUserInfo": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this PowerBIUserInfo item can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "UserName": {
          "type": "string",
          "description": "A string value that specifies the network user name of the Power BI user.",
          "format": "string"
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.PowerBIUserStatus"
            },
            {
              "description": "An enumeration value that specifies the status for a PowerBI user's session."
            }
          ]
        }
      },
      "title": "PowerBIUserInfo",
      "description": "An object that specifies information about a Power BI User."
    },
    "Model.DailyRecurrence": {
      "type": "object",
      "properties": {},
      "title": "DailyRecurrence",
      "description": "Represents the intervals at which a scheduled report runs. Intervals are specified in days."
    },
    "Model.DaysOfWeekSelector": {
      "type": "object",
      "properties": {},
      "title": "DaysOfWeekSelector",
      "description": "Represents the days of the week on which a scheduled report runs."
    },
    "Model.ExtensionType": {
      "type": "object",
      "properties": {},
      "title": "ExtensionType",
      "description": "An enumeration of Reporting Services extension types."
    },
    "Model.ReportHistorySnapshot": {
      "type": "object",
      "properties": {
        "HistoryId": {
          "type": "string",
          "description": " A string value that is the identifier for this ReportHistorySnapshot item.",
          "format": "string"
        },
        "CreationDate": {
          "type": "string",
          "description": "A date-time value that specifies the creation date for the snapshot.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "Size": {
          "type": "integer",
          "description": "An integer value that specifies the size of the snapshot in bytes.",
          "format": "int32"
        }
      },
      "title": "ReportHistorySnapshot",
      "description": "An object that specifies metadata about a Report history snapshot."
    },
    "Model.ReportServerInfo": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this ReportServerInfo item can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "ReportServerUrl": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server.",
          "format": "string"
        },
        "VirtualDirectory": {
          "type": "string",
          "description": "A string value that specifies the Report Server Virtual Directory.",
          "format": "string"
        },
        "WebAppUrl": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server Web Portal.",
          "format": "string"
        }
      },
      "title": "ReportServerInfo",
      "description": "An object that specifies information about the Report Server server."
    },
    "Model.ExtensionSettings": {
      "type": "object",
      "properties": {
        "Extension": {
          "type": "string",
          "description": "A string value that specifies the name of the Reporting Services extension that the settings in the object apply to.",
          "format": "string"
        },
        "ParameterValues": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ParameterValue"
            },
            {
              "description": "An array of objects of type ParameterValue that specify the values for the parameters for the extension specified in the property 'Extension'."
            }
          ]
        }
      },
      "title": "ExtensionSettings",
      "description": "An object that defines parameter values that are used for a Reporting Services extension."
    },
    "Model.MinuteRecurrence": {
      "type": "object",
      "properties": {},
      "title": "MinuteRecurrence",
      "description": "Represents the intervals, in minutes, at which a scheduled report runs."
    },
    "Model.WeekNumberEnum": {
      "type": "object",
      "properties": {},
      "title": "WeekNumberEnum",
      "description": "Describes the week of the month on which a scheduled report runs."
    },
    "Model.MonthlyDOWRecurrence": {
      "type": "object",
      "properties": {},
      "title": "MonthlyDOWRecurrence",
      "description": "Represents the dates on which a scheduled report runs, typically by month, week, and day of the week."
    },
    "Model.MonthlyRecurrence": {
      "type": "object",
      "properties": {},
      "title": "MonthlyRecurrence",
      "description": "Represents the days of the month on which a scheduled report runs."
    },
    "Model.MonthsOfYearSelector": {
      "type": "object",
      "properties": {},
      "title": "MonthsOfYearSelector",
      "description": "Represents the months of the year in which a scheduled report runs."
    },
    "Model.ScheduleStateEnum": {
      "type": "object",
      "properties": {},
      "title": "ScheduleStateEnum",
      "description": "An enumeration of values that specify the current execution status for a Schedule."
    },
    "Model.Schedule": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this Schedule can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the Schedule. This name will typically be displayed in the user interface.",
          "format": "string"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text about the Schedule object.",
          "format": "string"
        },
        "Creator": {
          "type": "string",
          "description": "A string value that specifies the network user name of the user who originally created the schedule.",
          "format": "string"
        },
        "NextRunTime": {
          "type": "string",
          "description": "A date-time value that specifies the next time that the Schedule is scheduled to run.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "NextRunTimeSpecified": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether next run time is specified.",
          "format": "true|false"
        },
        "LastRunTime": {
          "type": "string",
          "description": "A date-time value that specifies the previous time that the Schedule ran.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "LastRunTimeSpecified": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether last run time is specified.",
          "format": "true|false"
        },
        "ReferencesPresent": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the Schedule is in active use by another item on the server.",
          "format": "true|false"
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ScheduleStateEnum"
            },
            {
              "description": "An enumeration value that specifies the current execution status for a Schedule."
            }
          ]
        }
      },
      "title": "Schedule",
      "description": "An object that specifies the details for a Schedule."
    },
    "Model.KpiData": {
      "type": "object",
      "properties": {
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiDataItem"
            },
            {
              "description": "An object that specifies the metadata source for the Value component of a KPI."
            }
          ]
        },
        "Goal": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiDataItem"
            },
            {
              "description": "An object that specifies the metadata source for the Goal component of a KPI."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiDataItem"
            },
            {
              "description": "An object that specifies the metadata source for the Status component of a KPI."
            }
          ]
        },
        "TrendSet": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiDataItem"
            },
            {
              "description": "An object that specifies the metadata source for the Trendset component of a KPI."
            }
          ]
        }
      },
      "title": "KpiData",
      "description": "An object that specifies the metadata source for the component parts of a KPI."
    },
    "Model.KpiDataItem": {
      "type": "object",
      "properties": {
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiDataItemType"
            },
            {
              "description": "An enumeration value that specifies the type of the KPI data item."
            }
          ]
        }
      },
      "title": "KpiDataItem",
      "description": "An enumeration value that specifies the type of the KPI data item."
    },
    "Model.KpiDataItemType": {
      "type": "object",
      "properties": {},
      "title": "KpiDataItemType",
      "description": "An enumeration of values that specify whether the KPI data item is static or shared."
    },
    "Model.KpiSharedDataItem": {
      "type": "object",
      "properties": {
        "Path": {
          "type": "string",
          "description": "A string value that contains the complete URL for the KpiSharedDataItem.",
          "format": "string"
        },
        "Column": {
          "type": "string",
          "description": "A string value that specifies the name of the column that the KPI shared data item is based on.",
          "format": "string"
        },
        "Aggregation": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiSharedDataItemAggregation"
            },
            {
              "description": "An object that specifies the aggregation function for the shared KPI data item."
            }
          ]
        },
        "Parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.DataSetParameter"
            },
            {
              "description": "An array of objects of type DataSetParameter that specify the parameter values used in DataSet access to determine the value of the shared KPI data item."
            }
          ]
        },
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this KpiSharedDataItem can be referenced.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        }
      },
      "title": "KpiSharedDataItem",
      "description": "An object that specifies the metadata used to determine the value of a shared KPI."
    },
    "Model.KpiStaticDataItem": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string",
          "description": "A string value that specifies the current value of a static KPI data item.",
          "format": "string"
        }
      },
      "title": "KpiStaticDataItem",
      "description": "An object that specifies information for the current value of a static KPI."
    },
    "Model.KpiValues": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string",
          "description": "A string value that specifies the value of the Value Property for the KPI.",
          "format": "string"
        },
        "Goal": {
          "type": "string",
          "description": "A Double value that specifies the value of the Goal Property for the KPI.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Status": {
          "type": "string",
          "description": "A Double value that specifies the value of the Status Property for the KPI.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "TrendSet": {
          "type": "array",
          "description": "An array of values that specifies the trendset for the KPI.",
          "format": "[]"
        }
      },
      "title": "KpiValues",
      "description": "An object that specifies the current set of values for a KPI."
    },
    "Model.ScheduleDefinition": {
      "type": "object",
      "properties": {
        "StartDateTime": {
          "type": "string",
          "description": "The starting date-time for the schedule.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "EndDate": {
          "type": "string",
          "description": "The ending date-time for the schedule.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "EndDateSpecified": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the schedule end is specified.",
          "format": "true|false"
        }
      },
      "title": "ScheduleDefinition",
      "description": "An object that defines a schedule including a start DateTime and an optional EndDate."
    },
    "Model.ScheduleReference": {
      "type": "object",
      "properties": {
        "ScheduleID": {
          "type": "string",
          "description": "The Id property of an existing schedule that will be used in the current context.",
          "format": "string"
        },
        "Definition": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ScheduleDefinition"
            },
            {
              "description": "If the schedule is not referenced by ScheduleID, this will contain the schedule definition"
            }
          ]
        }
      },
      "title": "ScheduleReference",
      "description": "An object that contains either a reference to a defined schedule or the schedule details for the curret context."
    },
    "Model.Subscription": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this Subscription can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Owner": {
          "type": "string",
          "description": "A string value that specifies the owner of the Subscription.",
          "format": "string"
        },
        "IsDataDriven": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether the members of the distribution list for the subscription is computed based on data.",
          "format": "true|false"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text about the Subscription.",
          "format": "string"
        },
        "Report": {
          "type": "string",
          "description": "A string value that specifies the path of the report that is subscribed to by this subscription.",
          "format": "string"
        },
        "IsActive": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether the subscription is currently active.",
          "format": "true|false"
        },
        "EventType": {
          "type": "string",
          "description": "The type of Event that triggers the subscription",
          "format": "string"
        },
        "ScheduleDescription": {
          "type": "string",
          "description": "A string value that constains descriptive text about the schedule referenced in the Schedule property.",
          "format": "string"
        },
        "LastRunTime": {
          "type": "string",
          "description": "A date-time value that specifies the last date-time that the schedule was last run.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "LastStatus": {
          "type": "string",
          "description": "Status of last run.",
          "format": "string"
        },
        "ExtensionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ExtensionSettings"
            },
            {
              "description": "An object that specifies the ExtensionSettings that will be used with the extension associated with this schedule."
            }
          ]
        },
        "DeliveryExtension": {
          "type": "string",
          "description": "An object that specifies the DeliveryExtension that will be used with this schedule's report delivery.",
          "format": "string"
        },
        "LocalizedDeliveryExtensionName": {
          "type": "string",
          "description": "Localized version of extension name when available.",
          "format": "string"
        },
        "ModifiedBy": {
          "type": "string",
          "description": "A string value that specifies the network user name of the user who last modified the subscription.",
          "format": "string"
        },
        "ModifiedDate": {
          "type": "string",
          "description": "A date-time value that specifies the last date-time that the schedule was modified.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "ParameterValues": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ParameterValue"
            },
            {
              "description": "An array of items of type ParameterValue that specify the parameter values for the schedule."
            }
          ]
        }
      },
      "title": "Subscription",
      "description": "An object that defines a Subscription. A Reporting Services subscription allows a user to subscribe to a Report or DataSource and then to automatically receive and update whenever the item is updated."
    },
    "Model.MobileReportManifest": {
      "type": "object",
      "properties": {
        "Resources": {
          "type": "array",
          "description": "An array of items of type ResourceGroup that specify the resources referenced in this MobileReport. A Resource is a generalized object and its content type is undefined.  A client must be able to understand the content returned in the Resource.",
          "format": "[]"
        },
        "DataSets": {
          "type": "array",
          "description": "An array of objects of type DataSetItem that specify the DataSets referenced in this MobileReport.",
          "format": "[]"
        },
        "Thumbnails": {
          "type": "array",
          "description": "An array of items of type ThumbnailItem that contains the thumbnails associated with the MobileReport.",
          "format": "[]"
        }
      },
      "title": "MobileReportManifest",
      "description": "An object that contains the specification of the contents of a mobile report."
    },
    "Model.DefinitionItem": {
      "type": "object",
      "properties": {},
      "title": "DefinitionItem",
      "description": "An object that contains pointer information to find an object in the catalog but not all the details of the item's definition."
    },
    "Model.DataSetItem": {
      "type": "object",
      "properties": {
        "TimeUnit": {
          "type": "string",
          "description": "The time unit for the dataset item. The possible values for this string are the following: 'Year', 'Quarter', 'Month', 'Weekday', 'Hour'.",
          "format": "string"
        },
        "DateTimeColumn": {
          "type": "string",
          "description": "A string value that specifies the name of the column in the DataSetItem that represents date and time.",
          "format": "string"
        }
      },
      "title": "DataSetItem",
      "description": "An object that contains additional DataSet properties for the MobileReportManifest"
    },
    "Model.ResourceGroup": {
      "type": "object",
      "properties": {
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.MobileReportResourceGroupType"
            },
            {
              "description": "An enumeration value that specifies the type of the ResourceGroup."
            }
          ]
        },
        "Items": {
          "type": "array",
          "description": "An array of objects of type ResourceItem that contain the contents of the resource group.",
          "format": "[]"
        }
      },
      "title": "ResourceGroup",
      "description": "An object that contains metadata and contents for a ResourceItem."
    },
    "Model.ResourceItem": {
      "type": "object",
      "properties": {},
      "title": "ResourceItem",
      "description": "An object that specifies the metadata for a Resource."
    },
    "Model.ThumbnailItem": {
      "type": "object",
      "properties": {},
      "title": "ThumbnailItem",
      "description": "An object that contains the contents of a thumbnail."
    },
    "Model.User": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this User object can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Username": {
          "type": "string",
          "description": "A string value that specifies the network username for the user.",
          "format": "string"
        },
        "DisplayName": {
          "type": "string",
          "description": "A string value that specifies the a name for display for the network user.",
          "format": "string"
        },
        "HasFavoriteItems": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the user has items that are designated as favorite items.",
          "format": "true|false"
        },
        "MyReportsPath": {
          "type": "string",
          "description": "A string value that specifies a path to a folder where a user's reports are stored by default. (This feature must be enabled by the server administrator).",
          "format": "string"
        }
      },
      "title": "User",
      "description": "An object that contains information about the Report Server user."
    },
    "Model.CatalogItemType": {
      "type": "object",
      "properties": {},
      "title": "CatalogItemType",
      "description": "An enumeration of values that specify the type of the catalog item."
    },
    "Model.Resource": {
      "type": "object",
      "properties": {},
      "title": "Resource",
      "description": "The resource object serves as a generalized container for a CatalogItem and can be retrieved in an HTTP request.  Resource is derived from CatalogItem and contains all of its properties."
    },
    "Model.Component": {
      "type": "object",
      "properties": {},
      "title": "Component",
      "description": "The component object serves as a generalized container for a CatalogItem."
    },
    "Model.DataSet": {
      "type": "object",
      "properties": {
        "HasParameters": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the data set definition contains parameters.",
          "format": "true|false"
        },
        "QueryExecutionTimeOut": {
          "type": "integer",
          "description": " An Int32 value that indicates the query execution timeout in seconds.",
          "format": "int32"
        }
      },
      "title": "DataSet",
      "description": "The DataSet object is derived from the abstract type, CatalogItem and therefore contains all of its properties. This object specifies the information needed to supply a set of data to a report. It is analogous to a view in a database and can include a data source pointer, a query definition, and optional parameter values, calculated fields, and filtering and collation information "
    },
    "Model.ItemPolicy": {
      "type": "object",
      "properties": {
        "InheritParentPolicy": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether access policy is to be inherited from the items parent item.",
          "format": "true|false"
        },
        "Policies": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.Policy"
            },
            {
              "description": "An array of objects of type Policy that specify the access policies to be applied to the item."
            }
          ]
        }
      },
      "title": "ItemPolicy",
      "description": "An object that specifies the access policy for the item."
    },
    "Model.Kpi": {
      "type": "object",
      "properties": {
        "ValueFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiValueFormat"
            },
            {
              "description": "An object that specifies the format for the value of the KPI."
            }
          ]
        },
        "Visualization": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiVisualization"
            },
            {
              "description": "An object that specifies the visualization for the KPI."
            }
          ]
        },
        "DrillthroughTarget": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.DrillthroughTarget"
            },
            {
              "description": "An object that specifies the target of the drillthrough for the KPI."
            }
          ]
        },
        "Currency": {
          "type": "string",
          "description": "A string value that specifies the currency.",
          "format": "string"
        },
        "Values": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiValues"
            },
            {
              "description": "An object that specifies the current values for a KPI."
            }
          ]
        },
        "Data": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.KpiData"
            },
            {
              "description": "An object that specifies the metadata source for the values for a KPI."
            }
          ]
        }
      },
      "title": "Kpi",
      "description": "An object that specifies a Key Process Indicator (KPI). KPI is derived from the abstract type CatalogItem and therefore includes all of its properties."
    },
    "Model.KpiValueFormat": {
      "type": "object",
      "properties": {},
      "title": "KpiValueFormat",
      "description": "An enumeration of values that specify the available formats for KPI values."
    },
    "Model.KpiVisualization": {
      "type": "object",
      "properties": {},
      "title": "KpiVisualization",
      "description": "An enumeration of values that specify the available types of visualizations for a KPI."
    },
    "Model.LinkedReport": {
      "type": "object",
      "properties": {
        "HasParameters": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the LinkedReport has parameters.",
          "format": "true|false"
        },
        "Link": {
          "type": "string",
          "description": " A string value that specifies the path to the report item that this linked report is linked to.",
          "format": "string"
        }
      },
      "title": "LinkedReport",
      "description": "An object that specifies a linked report. A linked report is a report server item that contains a pointer to the report definition but has its own set of report properties and settings."
    },
    "Model.MobileReport": {
      "type": "object",
      "properties": {
        "AllowCaching": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the MobileReport allows caching.",
          "format": "true|false"
        },
        "Manifest": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.MobileReportManifest"
            },
            {
              "description": "An object that specifies the complete content of the MobileReport."
            }
          ]
        },
        "HasSharedDataSets": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the MobileReport has shared data sets associated with it.",
          "format": "true|false"
        }
      },
      "title": "MobileReport",
      "description": "An object that specifies the content of a MobileReport."
    },
    "Model.Policy": {
      "type": "object",
      "properties": {
        "GroupUserName": {
          "type": "string",
          "description": "A string value that specifies the name of the user or group that the policy applies to.",
          "format": "string"
        },
        "Roles": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.Role"
            },
            {
              "description": "An array of objects of type Role that specify the security roles that are included in the Policy."
            }
          ]
        }
      },
      "title": "Policy",
      "description": "An object that specifies a set of Roles that are grouped together as a policy and can then be assigned as a group of policies to an item using the property GroupUserName."
    },
    "Model.Property": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the parameter name.",
          "format": "string"
        },
        "Value": {
          "type": "string",
          "description": "A string value that specifies the parameter value.",
          "format": "string"
        }
      },
      "title": "Property",
      "description": "An object that defines a parameter value in the form of a name-value pair."
    },
    "Model.Report": {
      "type": "object",
      "properties": {
        "HasDataSources": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the Report has DataSources associated with it.",
          "format": "true|false"
        },
        "HasSharedDataSets": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the Report has shared DataSets associated with it.",
          "format": "true|false"
        },
        "HasParameters": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the Report has parameters.",
          "format": "true|false"
        }
      },
      "title": "Report",
      "description": "An object that is the CatalogItem for a Report.  This object is derived from CatalogItem and therefore contains all of its properties, plus additional properties for the Report item."
    },
    "Model.Folder": {
      "type": "object",
      "properties": {},
      "title": "Folder",
      "description": "The Folder object is derived from the abstract type, CatalogItem and therefore contains all of its properties. This object specifies the definition of a Folder on the server. It does not contain additional properties beyond those specified for the base type, CatalogItem."
    },
    "Model.Role": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name of the role.",
          "format": "string"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text for the Role.",
          "format": "string"
        }
      },
      "title": "Role",
      "description": "An object that specifies security roles that are supported on the Reporting Services server instance."
    },
    "Model.WeeklyRecurrence": {
      "type": "object",
      "properties": {},
      "title": "WeeklyRecurrence",
      "description": "Represents the number of weeks and the days of the week on which a scheduled report runs."
    },
    "Model.ExtensionParameter": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the ExtensionParameter.",
          "format": "string"
        },
        "DisplayName": {
          "type": "string",
          "description": "The name of the extension setting that is displayed to the user.",
          "format": "string"
        },
        "Required": {
          "type": "boolean",
          "description": "Indicates whether the value is required.",
          "format": "true|false"
        },
        "ReadOnly": {
          "type": "boolean",
          "description": "Indicates whether the setting is read-only.",
          "format": "true|false"
        },
        "Value": {
          "type": "string",
          "description": "A string that represents the value of an extension parameter.",
          "format": "string"
        },
        "Error": {
          "type": "string",
          "description": "An error that describes a problem with the value of the setting.",
          "format": "string"
        },
        "Encrypted": {
          "type": "boolean",
          "description": "Indicates whether the extension parameter value should be encrypted in the report server database.",
          "format": "true|false"
        },
        "IsPassword": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the ExtensionParameter is a password.",
          "format": "true|false"
        },
        "ValidValues": {
          "type": "array",
          "description": "A set of values that can be configured for the setting.",
          "format": "[]"
        },
        "ValidValuesIsNull": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the ValidValues property is null.",
          "format": "true|false"
        }
      },
      "title": "ExtensionParameter",
      "description": "An object that contains the definition of a Reporting Services extension's parameter."
    },
    "odata.error": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/odata.error.main"
        }
      }
    },
    "odata.error.detail": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "odata.error.main": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/odata.error.detail"
          }
        },
        "innererror": {
          "type": "object",
          "description": "The structure of this object is service-specific"
        }
      }
    }
  },
  "paths": {
    "/CacheRefreshPlans": {
      "get": {
        "summary": "Retrieve array of items of type CacheRefreshPlan",
        "tags": [
          "CacheRefreshPlans"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
            "in": "query",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Id",
                "Id desc"
              ]
            },
            "type": "array"
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
            "in": "query",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "*",
                "Item"
              ]
            },
            "type": "array"
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
            "in": "query",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Id"
              ]
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of CacheRefreshPlan items.",
            "schema": {
              "type": "object",
              "title": "Collection of CacheRefreshPlans",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Model.CacheRefreshPlan"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "post": {
        "summary": "Add new item instance to CacheRefreshPlan",
        "tags": [
          "CacheRefreshPlans"
        ],
        "parameters": [
          {
            "name": "CacheRefreshPlan",
            "description": "The definition of the new CacheRefreshPlan item.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Model.CacheRefreshPlan"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "System returns the item that was just created.",
            "schema": {
              "$ref": "#/definitions/Model.CacheRefreshPlan"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/CacheRefreshPlans({Id})": {
      "get": {
        "summary": "Fetch CacheRefreshPlans item by Id property",
        "tags": [
          "CacheRefreshPlans"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
            "in": "query",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Id",
                "Id desc"
              ]
            },
            "type": "array"
          },
          {
            "name": "$expand",
            "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
            "in": "query",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "*",
                "Item"
              ]
            },
            "type": "array"
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
            "in": "query",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Id"
              ]
            },
            "type": "array"
          },
          {
            "name": "Id",
            "description": "The Id property of the CacheRefreshPlan item to be fetched.",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The specified retrieved item of type CacheRefreshPlan.",
            "schema": {
              "type": "object",
              "title": "Collection of CacheRefreshPlans",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Model.CacheRefreshPlan"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "Delete CacheRefreshPlan item by Id property",
        "tags": [
          "CacheRefreshPlans"
        ],
        "parameters": [
          {
            "name": "Id",
            "description": "The Id property of the CacheRefreshPlan item to be deleted.",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/CacheRefreshPlans({Id})/Model.Execute": {
      "post": {
        "summary": "Executes CacheRefreshPlan immediately.",
        "tags": [
          "CacheRefreshPlans"
        ],
        "parameters": [
          {
            "name": "Id",
            "description": "The Id property of the CacheRefreshPlan item to execute.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Model.CacheRefreshPlan"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "The return result is empty.",
            "schema": {
              "$ref": "#/definitions/Model.CacheRefreshPlan"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "responses": {
    "error": {
      "description": "Error",
      "schema": {
        "$ref": "#/definitions/odata.error"
      }
    }
  },
  "parameters": {
    "top": {
      "name": "$top",
      "description": "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)",
      "in": "query",
      "type": "integer"
    },
    "skip": {
      "name": "$skip",
      "description": "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)",
      "in": "query",
      "type": "boolean"
    },
    "count": {
      "name": "$count",
      "description": "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)",
      "in": "query",
      "type": "boolean"
    },
    "filter": {
      "name": "$filter",
      "description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)",
      "in": "query",
      "type": "string"
    },
    "search": {
      "name": "$search",
      "description": "Search items by search phrases, see [OData Searching](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374633)",
      "in": "query",
      "type": "string"
    }
  },
  "x-internal-service-name": "OData Service"
}