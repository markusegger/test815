{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Power BI Report Server REST API",
    "description": "Power BI Report Server (August 2017 Preview) REST API"
  },
  "schemes": [
    "http",
    "https"
  ],
  "host": "localhost",
  "basePath": "/reports/api/v2.0",
  "tags": [
    {
      "name": "CatalogItems"
    },
    {
      "name": "DataSets"
    },
    {
      "name": "DataSources"
    },
    {
      "name": "ExcelWorkbooks"
    },
    {
      "name": "ExecutionLogEntries"
    },
    {
      "name": "Extensions"
    },
    {
      "name": "FavoriteItems"
    },
    {
      "name": "Folders"
    },
    {
      "name": "Kpis"
    },
    {
      "name": "LinkedReports"
    },
    {
      "name": "Me"
    },
    {
      "name": "MobileReports"
    },
    {
      "name": "PowerBIReports"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Resources"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "System"
    }
  ],
  "definitions": {
    "Model.AllowedAction": {
      "type": "object",
      "properties": {
        "Action": {
          "type": "string",
          "description": "The allowed action.",
          "format": "string"
        }
      },
      "title": "AllowedAction",
      "description": "An object that specifies an allowed actions on a catalog item."
    },
    "Model.CatalogItemType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Folder",
        "Report",
        "DataSource",
        "DataSet",
        "Component",
        "Resource",
        "Kpi",
        "MobileReport",
        "LinkedReport",
        "ReportModel",
        "PowerBIReport",
        "ExcelWorkbook"
      ],
      "title": "CatalogItemType",
      "description": "An enumeration of values that specify the type of the catalog item."
    },
    "Model.CredentialsStoredInServer": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string",
          "description": "A string value that contains the user name that will be used to connect to an external data source.",
          "format": "string"
        },
        "Password": {
          "type": "string",
          "description": "A string value that contains the password that will be used to connect to an external data source.",
          "format": "string"
        },
        "UseAsWindowsCredentials": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the supplied credentials should be used as Windows credentials.",
          "format": "true|false"
        },
        "ImpersonateAuthenticatedUser": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the session should impersonate the user for the supplied credentials.",
          "format": "true|false"
        }
      },
      "title": "CredentialsStoredInServer",
      "description": "This object holds credentials for connection to an external data source. The object is stored on the report server, for later retrieval and utilization. NOTE this object represents a security risk, as its properties could be seen in plain text over the HTTP protocol; HTTPS is recommended."
    },
    "Model.CredentialsSuppliedByUser": {
      "type": "object",
      "properties": {
        "DisplayText": {
          "type": "string",
          "description": "A string value that contains text to use to prompt a user to supply credentials for connection to an external data source.",
          "format": "string"
        },
        "UseAsWindowsCredentials": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the credentials that the user supplied in response to a prompt should be used as Windows credentials.",
          "format": "true|false"
        }
      },
      "title": "CredentialsSuppliedByUser",
      "description": "An object that contains information about prompting a user for credentials for connecting to an external data source."
    },
    "Model.CatalogItem": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this CatalogItem can be referenced in requests or by other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the CatalogItem. This name will typically be displayed for the user in the user interface.",
          "format": "string"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text about the CatalogItem.",
          "format": "string"
        },
        "Path": {
          "type": "string",
          "description": "A string value that contains the full server path for the CatalogItem. Path is defined as an AlternateKey on CatalogItem and can be used as the parameter by which CatalogItem can be referenced in requests or by other defined objects.",
          "format": "string"
        },
        "Type": {
          "$ref": "#/definitions/Model.CatalogItemType"
        },
        "Hidden": {
          "type": "boolean",
          "description": "A boolean value that indicates if the CatalogItem is hidden.  If true, the item will generally not appear in listings of CatalogItems within the parent item.",
          "format": "true|false"
        },
        "Size": {
          "type": "integer",
          "description": "An int64 value that contains the size of the CatalogItem in bytes.",
          "format": "int64"
        },
        "ModifiedBy": {
          "type": "string",
          "description": "A string value that contains the network username of the last user to modify the CatalogItem.",
          "format": "string"
        },
        "ModifiedDate": {
          "type": "string",
          "description": "A string value that contains the date-time of the last modification to the CatalogItem.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "CreatedBy": {
          "type": "string",
          "description": "A string value that represents the network username of the user that originally created the CatalogItem.",
          "format": "string"
        },
        "CreatedDate": {
          "type": "string",
          "description": "A date-time value that represents the original creation date for the CatalogItem.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "ParentFolderId": {
          "type": "string",
          "description": "A UUID value that contains the Id property of the Folder CatalogItem that contains this CatalogItem.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "ContentType": {
          "type": "string",
          "description": "A string value that contains a SOAP MIME-type that is associated with the CatalogItem.",
          "format": "string"
        },
        "Content": {
          "type": "string",
          "description": "A string value that contains binary encoding by base64url encoding rules. The value of this property is not processed by the server. In object creation the server recieves and stores a value, and in object retrieval, the server returns the previously stored value."
        },
        "IsFavorite": {
          "type": "boolean",
          "description": "A boolean value that specifies whether the CatalogItem is designated as a Favorite.",
          "format": "true|false"
        }
      },
      "title": "CatalogItem",
      "description": "CatalogItem is an abstract type that contains the common properties of all the types of catalog items. Hence, it is the BaseType from which the other catalog item types are derived."
    },
    "Model.Comment": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "description": "An integer value that specifies a unique identifier for the comment.",
          "format": "int64"
        },
        "ItemId": {
          "type": "string",
          "description": "A uuid value that specifies a pointer to the CatalogItem item to which the comment is attached.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "UserName": {
          "type": "string",
          "description": " A string value that represents the user that created the comment item.",
          "format": "string"
        },
        "ThreadId": {
          "type": "string",
          "description": "An integer value that specifies an identifier for the thread of the comment. A comment's thread can be used to group comments that are a response to each other in one grouping.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "AttachmentPath": {
          "type": "string",
          "description": "A string value that specifies the server path to an attachment that is part of the comment.",
          "format": "string"
        },
        "Text": {
          "type": "string",
          "description": "A string value that contains the text of the Comment",
          "format": "string"
        },
        "CreatedDate": {
          "type": "string",
          "description": "A date-time value that represents the original creation date for the Comment.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "ModifiedDate": {
          "type": "string",
          "description": "A string value that contains the date-time of the last modification to the Comment.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        }
      },
      "title": "Comment",
      "description": "An object that specifies a comment that is attached to a CatalogItem."
    },
    "Model.DataSet": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "HasParameters": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the data set definition contains parameters.",
              "format": "true|false"
            },
            "QueryExecutionTimeOut": {
              "type": "integer",
              "description": " An Int32 value that indicates the query execution timeout in seconds.",
              "format": "int32"
            }
          },
          "title": "DataSet",
          "description": "The DataSet object is derived from the abstract type, CatalogItem and therefore contains all of its properties. This object specifies the information needed to supply a set of data to a report. It is analogous to a view in a database and can include a data source pointer, a query definition, and optional parameter values, calculated fields, and filtering and collation information"
        }
      ]
    },
    "Model.DataSetItem": {
      "type": "object",
      "properties": {
        "TimeUnit": {
          "type": "string",
          "description": "The time unit for the dataset item. The possible values for this string are the following: 'Year', 'Quarter', 'Month', 'Weekday', 'Hour'.",
          "format": "string"
        },
        "DateTimeColumn": {
          "type": "string",
          "description": "A string value that specifies the name of the column in the DataSetItem that represents date and time.",
          "format": "string"
        }
      },
      "title": "DataSetItem",
      "description": "An object that contains additional DataSet properties for the MobileReportManifest"
    },
    "Model.DataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "IsEnabled": {
              "type": "boolean",
              "description": "A Boolean value that specifies whether the DataSource is enabled for use.",
              "format": "true|false"
            },
            "ConnectionString": {
              "type": "string",
              "description": "A string value that can be passed to a data source in order to being the process of establishing connection.",
              "format": "string"
            },
            "DataSourceType": {
              "type": "string",
              "description": "DataSource Extension like 'SQL'",
              "format": "string"
            },
            "IsOriginalConnectionStringExpressionBased": {
              "type": "boolean",
              "description": "Indicates whether the original connection string for the data source was expression-based.",
              "format": "true|false"
            },
            "IsConnectionStringOverridden": {
              "type": "boolean",
              "description": "Specifies whether original connection string is overridden.",
              "format": "true|false"
            },
            "CredentialsByUser": {
              "$ref": "#/definitions/Model.CredentialsSuppliedByUser"
            },
            "CredentialsInServer": {
              "$ref": "#/definitions/Model.CredentialsStoredInServer"
            },
            "IsReference": {
              "type": "boolean",
              "description": "Indicates whether the is a reference to a shared data source or an embedded data source.",
              "format": "true|false"
            },
            "DSIDNum": {
              "type": "string",
              "description": " An Int64 value that is for internal use only. (TODO Comment from bug bash: 'This is not present'.  Note that it was discussed during the OIPI phase that it be removed, so if it is confirmed that it is removed, needs to be removed here)",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            },
            "Subscriptions": {
              "$ref": "#/definitions/Model.Subscription"
            }
          },
          "title": "DataSource",
          "description": "An object that defines information about an external source of data that can be connected to as a source of data for reporting services. DataSource is derived from CatalogItem and therefore includes all properties defined by CatalogItem."
        }
      ]
    },
    "Model.DrillthroughTarget": {
      "type": "object",
      "properties": {
        "DrillthroughTargetType": {
          "$ref": "#/definitions/Model.DrillthroughTargetType"
        }
      },
      "title": "DrillthroughTarget",
      "description": "An object that specifies the type of the target of a drillthrough operation."
    },
    "Model.DrillthroughTargetType": {
      "type": "string",
      "enum": [
        "Url",
        "CatalogItem"
      ],
      "title": "DrillthroughTargetType",
      "description": "An enumeration of values that specify the available types for the target object of a drillthrough operation."
    },
    "Model.ExcelWorkbook": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "Comments": {
              "type": "array",
              "description": "An array of objects of type Comment that are associated with the ExcelWorkbook catalog item.",
              "items": {
                "$ref": "#/definitions/Model.Comment"
              }
            }
          },
          "title": "ExcelWorkbook",
          "description": "An object that is the CatalogItem for an ExcelWorkbook.  This object is derived from CatalogItem and therefore contains all of its properties, plus additional properties for an excel workbook."
        }
      ]
    },
    "Model.ExecutionLogInfo": {
      "type": "object",
      "properties": {
        "LogEntryId": {
          "type": "integer",
          "description": "Unique key that identifies the execution log entry in catalog.",
          "format": "int64"
        },
        "CatalogItemId": {
          "type": "string",
          "description": "Id of catalog item for this execution log info",
          "format": "uuid",
          "example": "4fe74eb8-f053-4e54-8c33-3aa68a04c628"
        },
        "ItemPath": {
          "type": "string",
          "description": "A string value that specifies the URL path to the item whose information is logged in this object instance.",
          "format": "string"
        },
        "StartTime": {
          "type": "string",
          "description": "A date-time value that specifies the start time for this log entry's activity.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "EndTime": {
          "type": "string",
          "description": "A date-time value that specifies the end time for this log entry's activity.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "Format": {
          "type": "string",
          "description": "A string value that describes the rendering format of the execution instance.",
          "format": "string"
        },
        "Parameters": {
          "type": "string",
          "description": "Report parameter values separated by '&'",
          "format": "string"
        },
        "Status": {
          "type": "integer",
          "description": "An integer value that specifies the status.",
          "format": "int64"
        },
        "ByteCount": {
          "type": "integer",
          "description": "An integer value that specifies the byte count for the log.",
          "format": "int64"
        },
        "ProcessingTime": {
          "type": "integer",
          "description": "An integer value that specifies the processing time for this log entry's activity in milliseconds?",
          "format": "int32"
        },
        "RenderingTime": {
          "type": "integer",
          "description": "An integer value that specifies the rendering time for this log entry's activity in milliseconds?",
          "format": "int32"
        },
        "DataRetrievalTime": {
          "type": "integer",
          "description": "An integer value that specifies the data retrieval time for this log entry's activity in milliseconds?",
          "format": "int32"
        },
        "ExecutionId": {
          "type": "string",
          "description": "A string value that is a unique identifier for the execution instance.",
          "format": "string"
        },
        "AdditionalInfo": {
          "type": "string",
          "description": "The AdditionalInfo field is an XML property bag or structure containing additional information about the execution. The contents can be different for each row in the log.",
          "format": "string"
        }
      },
      "title": "ExecutionLogInfo",
      "description": "An object that represents one entry in the Report Server log file."
    },
    "Model.Extension": {
      "type": "object",
      "properties": {
        "ExtensionType": {
          "$ref": "#/definitions/Model.ExtensionType"
        },
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the Extension. This name will typically be displayed in the user interface.",
          "format": "string"
        },
        "LocalizedName": {
          "type": "string",
          "description": "A string value that specifies a localized name for the Extension.",
          "format": "string"
        },
        "Visible": {
          "type": "boolean",
          "description": "A boolean value that indicates if the Extension is visible. If false, the item will generally not appear in listings of available extensions.",
          "format": "true|false"
        }
      },
      "title": "Extension",
      "description": "An object that holds the definition of a reporting services extension."
    },
    "Model.ExtensionParameter": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the ExtensionParameter.",
          "format": "string"
        },
        "DisplayName": {
          "type": "string",
          "description": "The name of the extension setting that is displayed to the user.",
          "format": "string"
        },
        "Required": {
          "type": "boolean",
          "description": "Indicates whether the value is required.",
          "format": "true|false"
        },
        "ReadOnly": {
          "type": "boolean",
          "description": "Indicates whether the setting is read-only.",
          "format": "true|false"
        },
        "Value": {
          "type": "string",
          "description": "A string that represents the value of an extension parameter.",
          "format": "string"
        },
        "Error": {
          "type": "string",
          "description": "An error that describes a problem with the value of the setting.",
          "format": "string"
        },
        "Encrypted": {
          "type": "boolean",
          "description": "Indicates whether the extension parameter value should be encrypted in the report server database.",
          "format": "true|false"
        },
        "IsPassword": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the ExtensionParameter is a password.",
          "format": "true|false"
        },
        "ValidValues": {
          "type": "array",
          "description": "A set of values that can be configured for the setting.",
          "items": {
            "$ref": "#/definitions/Model.ValidValue"
          }
        },
        "ValidValuesIsNull": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the ValidValues property is null.",
          "format": "true|false"
        }
      },
      "title": "ExtensionParameter",
      "description": "An object that contains the definition of a Reporting Services extension's parameter."
    },
    "Model.ExtensionSettings": {
      "type": "object",
      "properties": {
        "Extension": {
          "type": "string",
          "description": "A string value that specifies the name of the Reporting Services extension that the settings in the object apply to.",
          "format": "string"
        },
        "ParameterValues": {
          "$ref": "#/definitions/Model.ParameterValue"
        }
      },
      "title": "ExtensionSettings",
      "description": "An object that defines parameter values that are used for a Reporting Services extension."
    },
    "Model.ExtensionType": {
      "type": "string",
      "enum": [
        "Delivery",
        "DeliveryUI",
        "Render",
        "Data",
        "All"
      ],
      "title": "ExtensionType",
      "description": "An enumeration of Reporting Services extension types."
    },
    "Model.FavoriteItem": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The uniquie identifier of the catalog item that is marked as a favorite.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Item": {
          "$ref": "#/definitions/Model.CatalogItem"
        }
      },
      "title": "FavoriteItem",
      "description": "An object that a reference to a catalog item that the user has marked as favorite."
    },
    "Model.Folder": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {},
          "title": "Folder",
          "description": "The Folder object is derived from the abstract type, CatalogItem and therefore contains all of its properties. This object specifies the definition of a Folder on the server. It does not contain additional properties beyond those specified for the base type, CatalogItem."
        }
      ]
    },
    "Model.HistorySnapshot": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The unique identifier of the history snapshot.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "HistoryId": {
          "type": "string",
          "description": "History snapshot Id by date created.",
          "format": "string"
        },
        "CreationDate": {
          "type": "string",
          "description": "Creation date of history snapshot",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "Size": {
          "type": "integer",
          "description": "Size of the history snapshot",
          "format": "int32"
        }
      },
      "title": "HistorySnapshot",
      "description": "An object that contains hisotory snapshot information."
    },
    "Model.HistorySnapshotOptions": {
      "type": "object",
      "properties": {
        "CatalogItemId": {
          "type": "string",
          "description": "The Id of catalog item that this HistorySnapshotOptions belows to.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "HistorySnapshotsOptions": {
          "$ref": "#/definitions/Model.ReportHistorySnapshotsOptions"
        }
      },
      "title": "HistorySnapshotOptions",
      "description": "An object that has a reference to a history snapshot options for given catalog."
    },
    "Model.ItemPolicy": {
      "type": "object",
      "properties": {
        "InheritParentPolicy": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether access policy is to be inherited from the items parent item.",
          "format": "true|false"
        },
        "Policies": {
          "description": "An array of objects of type Policy that specify the access policies to be applied to the item.      ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model.Policy"
          }
        }
      },
      "title": "ItemPolicy",
      "description": "An object that specifies the access policy for the item."
    },
    "Model.Kpi": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "ValueFormat": {
              "$ref": "#/definitions/Model.KpiValueFormat"
            },
            "Visualization": {
              "$ref": "#/definitions/Model.KpiVisualization"
            },
            "DrillthroughTarget": {
              "$ref": "#/definitions/Model.DrillthroughTarget"
            },
            "Currency": {
              "type": "string",
              "description": "A string value that specifies the currency. Must follow the ISO 4217 Currency codes standard.",
              "format": "string"
            },
            "Values": {
              "$ref": "#/definitions/Model.KpiValues"
            },
            "Data": {
              "$ref": "#/definitions/Model.KpiData"
            }
          },
          "title": "Kpi",
          "description": "An object that specifies a Key Process Indicator (KPI). KPI is derived from the abstract type CatalogItem and therefore includes all of its properties."
        }
      ]
    },
    "Model.KpiData": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/definitions/Model.KpiDataItem"
        },
        "Goal": {
          "$ref": "#/definitions/Model.KpiDataItem"
        },
        "Status": {
          "$ref": "#/definitions/Model.KpiDataItem"
        },
        "TrendSet": {
          "$ref": "#/definitions/Model.KpiDataItem"
        }
      },
      "title": "KpiData",
      "description": "An object that specifies the metadata source for the component parts of a KPI."
    },
    "Model.KpiDataItem": {
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Model.KpiDataItemType"
        }
      },
      "title": "KpiDataItem",
      "description": "An enumeration value that specifies the type of the KPI data item."
    },
    "Model.KpiDataItemType": {
      "type": "string",
      "enum": [
        "Static",
        "Shared"
      ],
      "title": "KpiDataItemType",
      "description": "An enumeration of values that specify whether the KPI data item is static or shared."
    },
    "Model.KpiValueFormat": {
      "type": "string",
      "enum": [
        "General",
        "Abbreviated",
        "DefaultCurrency",
        "DefaultCurrencyWithDecimals",
        "AbbreviatedDefaultCurrency",
        "Percent",
        "PercentWithDecimals"
      ],
      "title": "KpiValueFormat",
      "description": "An enumeration of values that specify the available formats for KPI values."
    },
    "Model.KpiValues": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string",
          "description": "A string value that specifies the value of the Value Property for the KPI.",
          "format": "string"
        },
        "Goal": {
          "type": "number",
          "format": "double",
          "description": "A Double value that specifies the value of the Goal Property for the KPI."
        },
        "Status": {
          "type": "number",
          "format": "double",
          "description": "A Double value that specifies the value of the Status Property for the KPI."
        },
        "TrendSet": {
          "description": "An array of values that specifies the trendset for the KPI.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "double"
          }
        }
      },
      "title": "KpiValues",
      "description": "An object that specifies the current set of values for a KPI."
    },
    "Model.KpiVisualization": {
      "type": "string",
      "enum": [
        "None",
        "Bar",
        "Line",
        "Step",
        "Area"
      ],
      "title": "KpiVisualization",
      "description": "An enumeration of values that specify the available types of visualizations for a KPI."
    },
    "Model.LinkedReport": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "HasParameters": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the LinkedReport has parameters.",
              "format": "true|false"
            },
            "Link": {
              "type": "string",
              "description": " A string value that specifies the path to the report item that this linked report is linked to.",
              "format": "string"
            }
          },
          "title": "LinkedReport",
          "description": "An object that specifies a linked report. A linked report is a catalog item that contains a pointer to the report definition but has its own set of report properties and settings."
        }
      ]
    },
    "Model.ManifestItem": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this defined item can be referenced in requests or in other defined objects.",
          "format": "uuid"
        },
        "Path": {
          "type": "string",
          "description": "A string value that contains the complete URL for the defined item."
        },
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the item. This name will typically be displayed in the user interface."
        },
        "Hash": {
          "type": "string",
          "description": "A string value that contains an SHA256 hash of the contents of the item."
        }
      }
    },
    "Model.MobileReport": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "AllowCaching": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the MobileReport allows caching.",
              "format": "true|false"
            },
            "Manifest": {
              "$ref": "#/definitions/Model.MobileReportManifest"
            },
            "HasSharedDataSets": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the MobileReport has shared data sets associated with it.",
              "format": "true|false"
            }
          },
          "title": "MobileReport",
          "description": "An object that specifies the content of a MobileReport."
        }
      ]
    },
    "Model.MobileReportManifest": {
      "type": "object",
      "properties": {
        "Resources": {
          "type": "array",
          "description": "An array of items of type ResourceGroup that specify the resources referenced in this MobileReport. A Resource is a generalized object and its content type is undefined.  A client must be able to understand the content returned in the Resource.",
          "items": {
            "$ref": "#/definitions/Model.ResourceGroup"
          }
        },
        "DataSets": {
          "type": "array",
          "description": "An array of objects of type DataSetItem that specify the DataSets referenced in this MobileReport.",
          "items": {
            "$ref": "#/definitions/Model.DataSetItem"
          }
        },
        "Thumbnails": {
          "type": "array",
          "description": "An array of items of type ThumbnailItem that contains the thumbnails associated with the MobileReport.",
          "items": {
            "$ref": "#/definitions/Model.ThumbnailItem"
          }
        }
      },
      "title": "MobileReportManifest",
      "description": "An object that contains the specification of the contents of a mobile report."
    },
    "Model.MobileReportThumbnailType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Landscape",
        "Portrait"
      ],
      "title": "MobileReportThumbnailType",
      "description": "An enumeration of values that specify the available orientations for Thumbnails.."
    },
    "Model.MobileReportResourceGroupType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Style",
        "Map"
      ],
      "title": "MobileReportResourceGroupType",
      "description": "An enumeration of values that specify the known types for MobileReport Resources."
    },
    "Model.ParameterValue": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string that contains the name of the parameter.",
          "format": "string"
        },
        "Value": {
          "type": "string",
          "description": "A string that contains the value for the parameter.",
          "format": "string"
        },
        "IsValueFieldReference": {
          "type": "boolean",
          "description": "A boolean value that indicates if the parameter's value is a field reference.",
          "format": "true|false"
        }
      },
      "title": "ParameterValue",
      "description": "An object that specifies a parameter's value, as a name-value pair."
    },
    "Model.Policy": {
      "type": "object",
      "properties": {
        "GroupUserName": {
          "type": "string",
          "description": "A string value that specifies the name of the user or group that the policy applies to.",
          "format": "string"
        },
        "Roles": {
          "description": "An array of objects of type Role that specify the security roles that are included in the Policy.     ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model.Role"
          }
        }
      },
      "title": "Policy",
      "description": "An object that specifies a set of Roles that are grouped together as a policy and can then be assigned as a group of policies to an item using the property GroupUserName."
    },
    "Model.PowerBIReport": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "HasDataSources": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the PowerBIReport has DataSources.",
              "format": "true|false"
            }
          },
          "title": "PowerBIReport",
          "description": "An object that is the CatalogItem for a Power BI Report. This object is derived from CatalogItem and therefore contains all of its properties, plus additional properties for the PowerBIReport item."
        }
      ]
    },
    "Model.Property": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the parameter name.",
          "format": "string"
        },
        "Value": {
          "type": "string",
          "description": "A string value that specifies the parameter value.",
          "format": "string"
        }
      },
      "title": "Property",
      "description": "An object that defines a parameter value in the form of a name-value pair."
    },
    "Model.Report": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {
            "HasDataSources": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the Report has DataSources associated with it.",
              "format": "true|false"
            },
            "HasSharedDataSets": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the Report has shared DataSets associated with it.",
              "format": "true|false"
            },
            "HasParameters": {
              "type": "boolean",
              "description": "A Boolean value that indicates whether the Report has parameters.",
              "format": "true|false"
            }
          },
          "title": "Report",
          "description": "An object that is the CatalogItem for a Report.  This object is derived from CatalogItem and therefore contains all of its properties, plus additional properties for the Report item."
        }
      ]
    },
    "Model.ReportHistorySnapshotsOptions": {
      "type": "object",
      "properties": {
        "ManualCreationEnabled": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether manual snapshot creation is enabled for this snapshot.",
          "format": "true|false"
        },
        "KeepExecutionSnapshots": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether execution snapshots are kept.",
          "format": "true|false"
        },
        "UseDefaultSystemLimit": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether the default system limit is used for this history snapshot.",
          "format": "true|false"
        },
        "ScopedLimit": {
          "type": "integer",
          "description": "Integer value indicating how many snapshots to keep.",
          "format": "int32"
        },
        "SystemLimit": {
          "type": "integer",
          "description": "Integer value indicating how many snapshots can be kept system wide.  Default (-1) is unlimited.",
          "format": "int32"
        },
        "Schedule": {
          "allOf": [
            {
              "$ref": "#/definitions/Model.ScheduleReference"
            },
            {
              "description": "An object that specifies the schedule for making snapshots for this item."
            }
          ]
        }
      },
      "title": "ReportHistorySnapshotsOptions",
      "description": "An object that specifies options for a Report history snapshot."
    },
    "Model.ReportParameterDefinition": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name for the ReportParameter. This name will typically be displayed in the user interface.",
          "format": "string"
        },
        "ValidValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model.ValidValue"
          }
        },
        "ValidValuesIsNull": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the ValidValues property is NULL.",
          "format": "true|false"
        },
        "Nullable": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the ReportParameter is allowed to be null.",
          "format": "true|false"
        },
        "AllowBlank": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether blank is allowed for the report parameter.",
          "format": "true|false"
        },
        "MultiValue": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the ReportParameter is multi-valued.",
          "format": "true|false"
        },
        "Prompt": {
          "type": "string",
          "description": " A string value that specifies text to be used to prompt a user for a value of a ReportParameter.",
          "format": "string"
        },
        "PromptUser": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the user should be prompted for the value for the ReportParameter.",
          "format": "true|false"
        },
        "QueryParameter": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether paramter is query based.",
          "format": "true|false"
        },
        "DefaultValuesQueryBased": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the default values for parameters are obtained from a query (instead of being static specified values).",
          "format": "true|false"
        },
        "ValidValuesQueryBased": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the valid values for parameters are obtained from a query (instead of being static specified values).",
          "format": "true|false"
        },
        "DefaultValues": {
          "type": "array",
          "description": " An array of string values that specify the default values for the parameter. If the parameter is multi-valued then the array can have more than one entry.",
          "items": {
            "type": "string"
          }
        },
        "DefaultValuesIsNull": {
          "type": "boolean",
          "description": " A Boolean value that indicates whether the DefaultValues property is NULL.",
          "format": "true|false"
        },
        "ErrorMessage": {
          "type": "string",
          "description": "Error returned when validating parameters.",
          "format": "string"
        }
      },
      "title": "ReportParameterDefinition",
      "description": "An object that specifies the metadata definition of a parameter for a report."
    },
    "Model.ReportParameterDefinitionPatch": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name of the report parameter.",
          "format": "string"
        },
        "DefaultValues": {
          "type": "array",
          "description": "Array of defult values",
          "items": {
            "type": "string"
          }
        },
        "Prompt": {
          "type": "string",
          "description": "A string value that specifies prompt text that can be used to prompt a user to enter a value for the parameter.",
          "format": "string"
        },
        "ParameterVisibility": {
          "$ref": "#/definitions/Model.ReportParameterVisibility"
        }
      },
      "title": "ReportParameterDefinitionPatch",
      "description": "An object that specifies the parts of a report parameter that can be modified outside of the RDL definition."
    },
    "Model.ReportParameterVisibility": {
      "type": "string",
      "enum": [
        "Visible",
        "Hidden",
        "Internal"
      ],
      "title": "ReportParameterVisibility",
      "description": "An enumeration of values that specify the visibility of a report parameter, as to whether it is visible at runtime, hidden at runtime, or internal, meaning only visible in the definition."
    },
    "Model.Resource": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.CatalogItem"
        },
        {
          "type": "object",
          "properties": {},
          "title": "Resource",
          "description": "The resource object serves as a generalized container for a CatalogItem and can be retrieved in a HTTP request.  Resource is derived from CatalogItem and contains all of its properties."
        }
      ]
    },
    "Model.ResourceGroup": {
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Model.MobileReportResourceGroupType"
        },
        "Items": {
          "type": "array",
          "description": "An array of objects of type ResourceItem that contain the contents of the resource group.",
          "items": {
            "$ref": "#/definitions/Model.ResourceItem"
          }
        }
      },
      "title": "ResourceGroup",
      "description": "An object that contains metadata and contents for a ResourceItem."
    },
    "Model.ResourceItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.ManifestItem"
        },
        {
          "type": "object",
          "properties": {
            "Key": {
              "type": "string"
            }
          }
        }
      ],
      "title": "ResourceItem",
      "description": "An object that specifies the metadata for a Resource."
    },
    "Model.Role": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "A string value that specifies the name of the role.",
          "format": "string"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text for the Role.",
          "format": "string"
        }
      },
      "title": "Role",
      "description": "An object that specifies security roles that are supported on the Report Server instance."
    },
    "Model.ScheduleDefinition": {
      "type": "object",
      "properties": {
        "StartDateTime": {
          "type": "string",
          "description": "The starting date-time for the schedule.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "EndDate": {
          "type": "string",
          "description": "The ending date-time for the schedule.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "EndDateSpecified": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the schedule end is specified.",
          "format": "true|false"
        }
      },
      "title": "ScheduleDefinition",
      "description": "An object that defines a schedule including a start DateTime and an optional EndDate."
    },
    "Model.ScheduleReference": {
      "type": "object",
      "properties": {
        "ScheduleID": {
          "type": "string",
          "description": "The Id property of an existing schedule that will be used in the current context.",
          "format": "string"
        },
        "Definition": {
          "$ref": "#/definitions/Model.ScheduleDefinition"
        }
      },
      "title": "ScheduleReference",
      "description": "An object that contains either a reference to a defined schedule or the schedule details for the curret context."
    },
    "Model.Subscription": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this Subscription can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Owner": {
          "type": "string",
          "description": "A string value that specifies the owner of the Subscription.",
          "format": "string"
        },
        "IsDataDriven": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether the members of the distribution list for the subscription is computed based on data.",
          "format": "true|false"
        },
        "Description": {
          "type": "string",
          "description": "A string value that constains descriptive text about the Subscription.",
          "format": "string"
        },
        "Report": {
          "type": "string",
          "description": "A string value that specifies the path of the report that is subscribed to by this subscription.",
          "format": "string"
        },
        "IsActive": {
          "type": "boolean",
          "description": "A Boolean value that specifies whether the subscription is currently active.",
          "format": "true|false"
        },
        "EventType": {
          "type": "string",
          "description": "The type of Event that triggers the subscription",
          "format": "string"
        },
        "ScheduleDescription": {
          "type": "string",
          "description": "A string value that constains descriptive text about the schedule referenced in the Schedule property.",
          "format": "string"
        },
        "LastRunTime": {
          "type": "string",
          "description": "A date-time value that specifies the last date-time that the schedule was last run.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "LastStatus": {
          "type": "string",
          "description": "Status of last run.",
          "format": "string"
        },
        "ExtensionSettings": {
          "$ref": "#/definitions/Model.ExtensionSettings"
        },
        "DeliveryExtension": {
          "type": "string",
          "description": "An object that specifies the DeliveryExtension that will be used with this schedule's report delivery.",
          "format": "string"
        },
        "LocalizedDeliveryExtensionName": {
          "type": "string",
          "description": "Localized version of extension name when available.",
          "format": "string"
        },
        "ModifiedBy": {
          "type": "string",
          "description": "A string value that specifies the network user name of the user who last modified the subscription.",
          "format": "string"
        },
        "ModifiedDate": {
          "type": "string",
          "description": "A date-time value that specifies the last date-time that the schedule was modified.",
          "format": "date-time",
          "example": "2017-04-13T15:51:04Z"
        },
        "ParameterValues": {
          "description": "An array of items of type ParameterValue that specify the parameter values for the schedule.    ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model.ParameterValue"
          }
        }
      },
      "title": "Subscription",
      "description": "An object that defines a Subscription. A Reporting Services subscription allows a user to subscribe to a Report or DataSource and then to automatically receive and update whenever the item is updated."
    },
    "Model.System": {
      "type": "object",
      "properties": {
        "ReportServerAbsoluteUrl": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server.",
          "format": "string"
        },
        "ReportServerRelativeUrl": {
          "type": "string",
          "description": "A string value that specifies the Report Server Virtual Directory.",
          "format": "string"
        },
        "WebPortalRelativeUrl": {
          "type": "string",
          "description": "A string value that specifies the URL for the Report Server Web Portal.",
          "format": "string"
        },
        "ProductName": {
          "type": "string",
          "description": "A string value that specifies the name of the Product being used.",
          "format": "string"
        },
        "ProductVersion": {
          "type": "string",
          "description": "A string value that specifies the version.",
          "format": "string"
        }
      },
      "title": "System",
      "description": "An object that specifies information about the Report Server."
    },
    "Model.ThumbnailItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Model.ManifestItem"
        },
        {
          "type": "object",
          "properties": {
            "Type": {
              "$ref": "#/definitions/Model.MobileReportThumbnailType"
            }
          }
        }
      ],
      "title": "ThumbnailItem",
      "description": "An object that contains the contents of a thumbnail."
    },
    "Model.User": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "A unique UUID value that specifies the identifier by which this User object can be referenced in requests or in other defined objects.",
          "format": "uuid",
          "example": "01234567-89ab-cdef-0123-456789abcdef"
        },
        "Username": {
          "type": "string",
          "description": "A string value that specifies the network username for the user.",
          "format": "string"
        },
        "DisplayName": {
          "type": "string",
          "description": "A string value that specifies the a name for display for the network user.",
          "format": "string"
        },
        "HasFavoriteItems": {
          "type": "boolean",
          "description": "A Boolean value that indicates whether the user has items that are designated as favorite items.",
          "format": "true|false"
        },
        "MyReportsPath": {
          "type": "string",
          "description": "A string value that specifies a path to a folder where a user's reports are stored by default. (This feature must be enabled by the server administrator).",
          "format": "string"
        }
      },
      "title": "User",
      "description": "An object that contains information about the Report Server user."
    },
    "Model.ValidValue": {
      "type": "object",
      "properties": {
        "Label": {
          "type": "string",
          "description": "A string value that specifies the label for the ValidValue."
        },
        "Value": {
          "type": "string",
          "description": "A string value that specifies the value of the ValidValue."
        }
      },
      "title": "ValidValue",
      "description": "An object that contains a value that is valid for use in its context; in the form of a label-value pair.    "
    },
    "odata.error": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/odata.error.main"
        }
      }
    },
    "odata.error.detail": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "odata.error.main": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/odata.error.detail"
          }
        },
        "innererror": {
          "type": "object",
          "description": "The structure of this object is service-specific"
        }
      }
    }
  },
  "paths": {
    "/Kpis": {
      "get": {
        "summary": "Gets an array of Kpi catalog items.",
        "tags": [
          "Kpis"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/orderby"
          },
          {
            "$ref": "#/parameters/expand"
          },
          {
            "$ref": "#/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "OData array of Kpi catalog items",
            "schema": {
              "type": "object",
              "title": "Array of Kpi catalog items",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Model.Kpi"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "post": {
        "summary": "Create a new Kpi catalog item.",
        "tags": [
          "Kpis"
        ],
        "parameters": [
          {
            "name": "Kpi",
            "description": "The definition of the new Kpi catalog item.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Model.Kpi"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "The definition of the Kpi item that was just created.",
            "schema": {
              "$ref": "#/definitions/Model.Kpi"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Kpis({Id})": {
      "get": {
        "summary": "Gets a Kpi catalog item with the specified Id.",
        "tags": [
          "Kpis"
        ],
        "responses": {
          "200": {
            "description": "The Kpi catalog item with the specified Id.",
            "schema": {
              "$ref": "#/definitions/Model.Kpi"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "summary": "Updates the specified Kpi catalog item using the provided definition.",
        "tags": [
          "Kpis"
        ],
        "parameters": [
          {
            "name": "Kpi",
            "description": "Definition of the Kpi item that updates the current item on the server.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Model.Kpi"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Model.Kpi"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "Deletes the specified Kpi from the catalog.",
        "tags": [
          "Kpis"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Kpis({Id})/Roles": {
      "get": {
        "summary": "Gets the Roles associated with the specified Kpi catalog item.",
        "tags": [
          "Kpis"
        ],
        "responses": {
          "200": {
            "description": "A array of Roles that are associated with the specified Kpi catalog item.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model.Role"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Kpis({Id})/Policies": {
      "get": {
        "summary": "Gets policies associated with the specified Kpi catalog item.",
        "tags": [
          "Kpis"
        ],
        "responses": {
          "200": {
            "description": "A array of ItemPolicies that are associated with the specified Kpi catalog item.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model.ItemPolicy"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "summary": "Replaces policies associated with the specified Kpi item.",
        "tags": [
          "Kpis"
        ],
        "parameters": [
          {
            "name": "ItemPolicies",
            "in": "body",
            "description": "The ItemPolicy definitions that will be replaced.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model.ItemPolicy"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model.ItemPolicy"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/Kpis({Id})/AllowedActions": {
      "get": {
        "summary": "Gets a list of actions allowed in the current session, user permissions and product edition capabilities are considered when querying.",
        "tags": [
          "Kpis"
        ],
        "responses": {
          "200": {
            "description": "An array of strings describing the allowed actions for the referenced item.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model.AllowedAction"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "responses": {
    "error": {
      "description": "Error",
      "schema": {
        "$ref": "#/definitions/odata.error"
      }
    }
  },
  "parameters": {
    "PathOrId": {
      "name": "Id",
      "in": "path",
      "type": "string",
      "required": true,
      "description": "The key (guid or path) that uniquely idendifies the object guid example \n  01234567-89ab-cdef-0123-456789abcdef  \npath example \n  path='/folder1/folder2/item'"
    },
    "top": {
      "name": "$top",
      "description": "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)",
      "in": "query",
      "type": "integer"
    },
    "skip": {
      "name": "$skip",
      "description": "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)",
      "in": "query",
      "type": "boolean"
    },
    "count": {
      "name": "$count",
      "description": "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)",
      "in": "query",
      "type": "boolean"
    },
    "filter": {
      "name": "$filter",
      "description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)",
      "in": "query",
      "type": "string"
    },
    "search": {
      "name": "$search",
      "description": "Search items by search phrases, see [OData Searching](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374633)",
      "in": "query",
      "type": "string"
    },
    "orderby": {
      "name": "$orderBy",
      "description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)",
      "in": "query",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "Id",
          "Id desc"
        ]
      },
      "type": "array"
    },
    "expand": {
      "name": "$expand",
      "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)",
      "in": "query",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "*",
          "Item"
        ]
      },
      "type": "array"
    },
    "select": {
      "name": "$select",
      "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)",
      "in": "query",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "Id"
        ]
      },
      "type": "array"
    }
  },
  "x-internal-service-name": "PowerBI Report Server"
}