{
  "swagger": "2.0",
  "info": {
    "title": "Work",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "Work",
  "basePath": "/",
  "tags": [
    {
      "name": "backlogconfiguration"
    },
    {
      "name": "boardcolumns"
    },
    {
      "name": "boardfiltersettings"
    },
    {
      "name": "boardparents"
    },
    {
      "name": "boardrows"
    },
    {
      "name": "boards"
    },
    {
      "name": "boardusersettings"
    },
    {
      "name": "capacities"
    },
    {
      "name": "cardrulesettings"
    },
    {
      "name": "cardsettings"
    },
    {
      "name": "charts"
    },
    {
      "name": "columns"
    },
    {
      "name": "deliverytimeline"
    },
    {
      "name": "iterations"
    },
    {
      "name": "plans"
    },
    {
      "name": "processconfiguration"
    },
    {
      "name": "rows"
    },
    {
      "name": "teamdaysoff"
    },
    {
      "name": "teamfieldvalues"
    },
    {
      "name": "teamsettings"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "Activity": {
      "description": "",
      "type": "object",
      "properties": {
        "capacityPerDay": {
          "type": "string",
          "format": "Single"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "attribute": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ],
      "properties": {}
    },
    "BacklogColumn": {
      "description": "",
      "type": "object",
      "properties": {
        "columnFieldReference": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BacklogConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "backlogFields": {
          "description": "Behavior/type field mapping",
          "$ref": "#/definitions/BacklogFields"
        },
        "bugsBehavior": {
          "description": "Bugs behavior",
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BugsBehavior"
          }
        },
        "hiddenBacklogs": {
          "description": "Hidden Backlog",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "portfolioBacklogs": {
          "description": "Portfolio backlog descriptors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BacklogLevelConfiguration"
          }
        },
        "requirementBacklog": {
          "description": "Requirement backlog",
          "$ref": "#/definitions/BacklogLevelConfiguration"
        },
        "taskBacklog": {
          "description": "Task backlog",
          "$ref": "#/definitions/BacklogLevelConfiguration"
        },
        "url": {
          "type": "string"
        },
        "workItemTypeMappedStates": {
          "description": "Mapped states for work item types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeStateInfo"
          }
        }
      }
    },
    "BacklogFields": {
      "description": "",
      "type": "object",
      "properties": {
        "typeFields": {
          "description": "Field Type (e.g. Order, Activity) to Field Reference Name map",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BacklogLevel": {
      "description": "Contract representing a backlog level",
      "type": "object",
      "properties": {
        "categoryReferenceName": {
          "description": "Reference name of the corresponding WIT category",
          "type": "string"
        },
        "pluralName": {
          "description": "Plural name for the backlog level",
          "type": "string"
        },
        "workItemStates": {
          "description": "Collection of work item states that are included in the plan. The server will filter to only these work item types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workItemTypes": {
          "description": "Collection of valid workitem type names for the given backlog level",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BacklogLevelConfiguration": {
      "description": "",
      "type": "object",
      "properties": {
        "addPanelFields": {
          "description": "List of fields to include in Add Panel",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "color": {
          "description": "Color for the backlog level",
          "type": "string"
        },
        "columnFields": {
          "description": "Default list of columns for the backlog",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BacklogColumn"
          }
        },
        "defaultWorkItemType": {
          "description": "Defaulst Work Item Type for the backlog",
          "$ref": "#/definitions/WorkItemTypeReference"
        },
        "id": {
          "description": "Backlog Id (for Legacy Backlog Level from process config it can be categoryref name)",
          "type": "string"
        },
        "name": {
          "description": "Backlog Name",
          "type": "string"
        },
        "rank": {
          "description": "Backlog Rank (Taskbacklog is 0)",
          "type": "integer",
          "format": "int32"
        },
        "workItemCountLimit": {
          "description": "Max number of work items to show in the given backlog",
          "type": "integer",
          "format": "int32"
        },
        "workItemTypes": {
          "description": "Work Item types participating in this backlog as known by the project/Process, can be overridden by team settings for bugs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "Board": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoardReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "allowedMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "canEdit": {
          "type": "boolean"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardColumn"
          }
        },
        "fields": {
          "$ref": "#/definitions/BoardFields"
        },
        "isValid": {
          "type": "boolean"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardRow"
          }
        }
      }
    },
    "BoardCardRuleSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "rules": {
          "type": "object",
          "additionalProperties": {
            "type": "array"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "BoardCardSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "cards": {
          "type": "object",
          "additionalProperties": {
            "type": "array"
          }
        }
      }
    },
    "BoardChart": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoardChartReference"
        }
      ],
      "properties": {
        "_links": {
          "description": "The links for the resource",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "settings": {
          "description": "The settings for the resource",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "BoardChartReference": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "BoardColumn": {
      "description": "",
      "type": "object",
      "properties": {
        "columnType": {
          "enum": [
            "incoming",
            "inProgress",
            "outgoing"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BoardColumnType"
          }
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isSplit": {
          "type": "boolean"
        },
        "itemLimit": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "stateMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BoardFields": {
      "description": "",
      "type": "object",
      "properties": {
        "columnField": {
          "$ref": "#/definitions/FieldReference"
        },
        "doneField": {
          "$ref": "#/definitions/FieldReference"
        },
        "rowField": {
          "$ref": "#/definitions/FieldReference"
        }
      }
    },
    "BoardFilterSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/FilterModel"
        },
        "parentWorkItemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "queryText": {
          "type": "string"
        }
      }
    },
    "BoardReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "BoardRow": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "BoardSuggestedValue": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "BoardUserSettings": {
      "description": "",
      "type": "object",
      "properties": {
        "autoRefreshState": {
          "type": "boolean"
        }
      }
    },
    "CapacityPatch": {
      "description": "Expected data from PATCH",
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "CardFieldSettings": {
      "description": "Card settings, such as fields and rules",
      "type": "object",
      "properties": {
        "additionalFields": {
          "description": "A collection of field information of additional fields on cards. The index in the collection signifies the order of the field among the additional fields. Currently unused. Should be used with User Story 691539: Card setting: additional fields",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          }
        },
        "assignedToDisplayFormat": {
          "description": "Display format for the assigned to field",
          "readOnly": true,
          "enum": [
            "avatarOnly",
            "fullName",
            "avatarAndFullName"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.IdentityDisplayFormat"
          }
        },
        "coreFields": {
          "description": "A collection of field information of rendered core fields on cards.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          }
        },
        "showAssignedTo": {
          "description": "Flag indicating whether to show assigned to field on cards. When true, AssignedToDisplayFormat will determine how the field will be displayed",
          "readOnly": true,
          "type": "boolean"
        },
        "showEmptyFields": {
          "description": "Flag indicating whether to show empty fields on cards",
          "readOnly": true,
          "type": "boolean"
        },
        "showId": {
          "description": "Flag indicating whether to show ID on cards",
          "readOnly": true,
          "type": "boolean"
        },
        "showState": {
          "description": "Flag indicating whether to show state field on cards",
          "readOnly": true,
          "type": "boolean"
        },
        "showTags": {
          "description": "Flag indicating whether to show tags on cards",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "CardSettings": {
      "description": "Card settings, such as fields and rules",
      "type": "object",
      "properties": {
        "fields": {
          "description": "A collection of settings related to rendering of fields on cards",
          "$ref": "#/definitions/CardFieldSettings"
        }
      }
    },
    "CategoryConfiguration": {
      "description": "Details about a given backlog category",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "referenceName": {
          "description": "Category Reference Name",
          "type": "string"
        },
        "workItemTypes": {
          "description": "Work item types for the backlog category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "CreatePlan": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "name": {
          "description": "Name of the plan to create.",
          "type": "string"
        },
        "properties": {
          "description": "Plan properties.",
          "type": "object"
        },
        "type": {
          "description": "Type of plan to create.",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanType"
          }
        }
      }
    },
    "DateRange": {
      "description": "",
      "type": "object",
      "properties": {
        "end": {
          "description": "End of the date range.",
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "description": "Start of the date range.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeliveryViewData": {
      "description": "Data contract for Data of Delivery View",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PlanViewData"
        }
      ],
      "properties": {
        "childIdToParentIdMap": {
          "description": "Work item child id to parenet id map",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "criteriaStatus": {
          "description": "Filter criteria status of the timeline",
          "$ref": "#/definitions/TimelineCriteriaStatus"
        },
        "endDate": {
          "description": "The end date of the delivery view data",
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "description": "The start date for the delivery view data",
          "type": "string",
          "format": "date-time"
        },
        "teams": {
          "description": "All the team data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineTeamData"
          }
        }
      }
    },
    "DeliveryViewPropertyCollection": {
      "description": "Collection of properties, specific to the DeliveryTimelineView",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PlanPropertyCollection"
        }
      ],
      "properties": {
        "cardSettings": {
          "description": "Card settings",
          "$ref": "#/definitions/CardSettings"
        },
        "criteria": {
          "description": "Field criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "markers": {
          "description": "Markers. Will be missing/null if there are no markers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Marker"
          }
        },
        "teamBacklogMappings": {
          "description": "Team backlog mappings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamBacklogMapping"
          }
        }
      }
    },
    "FieldInfo": {
      "description": "Object bag storing the set of permissions relevant to this plan",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The additional field display name",
          "type": "string"
        },
        "fieldType": {
          "description": "The additional field type",
          "enum": [
            "string",
            "plainText",
            "integer",
            "dateTime",
            "treePath",
            "boolean",
            "double"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.FieldType"
          }
        },
        "isIdentity": {
          "description": "Indicates if the field definition is for an identity field.",
          "type": "boolean"
        },
        "referenceName": {
          "description": "The additional field reference name",
          "type": "string"
        }
      }
    },
    "FieldReference": {
      "description": "An abstracted reference to a field",
      "type": "object",
      "properties": {
        "referenceName": {
          "description": "fieldRefName for the field",
          "type": "string"
        },
        "url": {
          "description": "Full http link to more information about the field",
          "type": "string"
        }
      }
    },
    "FieldSetting": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ],
      "properties": {}
    },
    "FilterClause": {
      "description": "",
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "logicalOperator": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FilterGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "end": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FilterModel": {
      "description": "",
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterGroup"
          }
        },
        "maxGroupLevel": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Marker": {
      "description": "Client serialization contract for Delivery Timeline Markers.",
      "type": "object",
      "properties": {
        "color": {
          "description": "Color associated with the marker.",
          "readOnly": true,
          "type": "string"
        },
        "date": {
          "description": "Where the marker should be displayed on the timeline.",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "Label/title for the marker.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Member": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ParentChildWIMap": {
      "description": "",
      "type": "object",
      "properties": {
        "childWorkItemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Plan": {
      "description": "Data contract for the plan definition",
      "type": "object",
      "properties": {
        "createdByIdentity": {
          "description": "Identity that created this plan. Defaults to null for records before upgrading to ScaledAgileViewComponent4.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdDate": {
          "description": "Date when the plan was created",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "id": {
          "description": "Id of the plan",
          "type": "string",
          "format": "uuid"
        },
        "modifiedByIdentity": {
          "description": "Identity that last modified this plan. Defaults to null for records before upgrading to ScaledAgileViewComponent4.",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedDate": {
          "description": "Date when the plan was last modified. Default to CreatedDate when the plan is first created.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the plan",
          "type": "string"
        },
        "properties": {
          "description": "The PlanPropertyCollection instance associated with the plan. These are dependent on the type of the plan. For example, DeliveryTimelineView, it would be of type DeliveryViewPropertyCollection.",
          "type": "object"
        },
        "revision": {
          "description": "Revision of the plan. Used to safeguard users from overwriting each other's changes.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the plan",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanType"
          }
        },
        "url": {
          "description": "The resource url to locate the plan via rest api",
          "type": "string"
        },
        "userPermissions": {
          "description": "Bit flag indicating set of permissions a user has to the plan.",
          "enum": [
            "none",
            "view",
            "edit",
            "delete",
            "manage",
            "allPermissions"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanUserPermissions"
          }
        }
      }
    },
    "PlanMetadata": {
      "description": "Metadata about a plan definition that is stored in favorites service",
      "type": "object",
      "properties": {
        "createdByIdentity": {
          "description": "Identity of the creator of the plan",
          "$ref": "#/definitions/IdentityRef"
        },
        "description": {
          "description": "Description of plan",
          "type": "string"
        },
        "modifiedDate": {
          "description": "Last modified date of the plan",
          "type": "string",
          "format": "date-time"
        },
        "userPermissions": {
          "description": "Bit flag indicating set of permissions a user has to the plan.",
          "enum": [
            "none",
            "view",
            "edit",
            "delete",
            "manage",
            "allPermissions"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanUserPermissions"
          }
        }
      }
    },
    "PlanPropertyCollection": {
      "description": "Base class for properties of a scaled agile plan",
      "type": "object",
      "properties": {}
    },
    "PlanViewData": {
      "description": "Base class for plan view data contracts. Anything common goes here.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProcessConfiguration": {
      "description": "Process Configurations for the project",
      "type": "object",
      "properties": {
        "bugWorkItems": {
          "description": "Details about bug work items",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "portfolioBacklogs": {
          "description": "Details about portfolio backlogs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryConfiguration"
          }
        },
        "requirementBacklog": {
          "description": "Details of requirement backlog",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "taskBacklog": {
          "description": "Details of task backlog",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "typeFields": {
          "description": "Type fields for the process configuration",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.  Example: `{ self: { href: \"http://localhost:8080/tfs/DefaultCollection/_apis/wit/workItems/1\" } }`",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Rule": {
      "description": "",
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "filter": {
          "type": "string"
        },
        "isEnabled": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/attribute"
        }
      }
    },
    "TeamBacklogMapping": {
      "description": "Mapping of teams to the corresponding work item category",
      "type": "object",
      "properties": {
        "categoryReferenceName": {
          "type": "string"
        },
        "teamId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TeamContext": {
      "description": "The Team Context for an operation.",
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TeamFieldValue": {
      "description": "Represents a single TeamFieldValue",
      "type": "object",
      "properties": {
        "includeChildren": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TeamFieldValues": {
      "description": "Essentially a collection of team field values",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "defaultValue": {
          "description": "The default team field value",
          "type": "string"
        },
        "field": {
          "description": "Shallow ref to the field being used as a team field",
          "$ref": "#/definitions/FieldReference"
        },
        "values": {
          "description": "Collection of all valid team field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        }
      }
    },
    "TeamFieldValuesPatch": {
      "description": "Expected data from PATCH",
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        }
      }
    },
    "TeamIterationAttributes": {
      "description": "",
      "type": "object",
      "properties": {
        "finishDate": {
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TeamMemberCapacity": {
      "description": "Represents capacity for a specific team member",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "activities": {
          "description": "Collection of capacities associated with the team member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "daysOff": {
          "description": "The days off associated with the team member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        },
        "teamMember": {
          "description": "Shallow Ref to the associated team member",
          "$ref": "#/definitions/Member"
        }
      }
    },
    "TeamSetting": {
      "description": "Data contract for TeamSettings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "backlogIteration": {
          "description": "Backlog Iteration",
          "$ref": "#/definitions/TeamSettingsIteration"
        },
        "backlogVisibilities": {
          "description": "Information about categories that are visible on the backlog.",
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "bugsBehavior": {
          "description": "BugsBehavior (Off, AsTasks, AsRequirements, ...)",
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BugsBehavior"
          }
        },
        "defaultIteration": {
          "description": "Default Iteration, the iteration used when creating a new work item on the queries page.",
          "$ref": "#/definitions/TeamSettingsIteration"
        },
        "defaultIterationMacro": {
          "description": "Default Iteration macro (if any)",
          "type": "string"
        },
        "workingDays": {
          "description": "Days that the team is working",
          "type": "array",
          "items": {
            "type": "string",
            "format": "DayOfWeek"
          }
        }
      }
    },
    "TeamSettingsDataContractBase": {
      "description": "Base class for TeamSettings data contracts. Anything common goes here.",
      "type": "object",
      "properties": {
        "_links": {
          "description": "Collection of links relevant to resource",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "TeamSettingsDaysOff": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "TeamSettingsDaysOffPatch": {
      "description": "",
      "type": "object",
      "properties": {
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "TeamSettingsIteration": {
      "description": "Represents a shallow ref for a single iteration",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "attributes": {
          "description": "Attributes such as start and end date",
          "$ref": "#/definitions/TeamIterationAttributes"
        },
        "id": {
          "description": "Id of the resource",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "path": {
          "description": "Relative path of the iteration",
          "type": "string"
        }
      }
    },
    "TeamSettingsPatch": {
      "description": "Data contract for what we expect to receive when PATCH",
      "type": "object",
      "properties": {
        "backlogIteration": {
          "type": "string",
          "format": "uuid"
        },
        "backlogVisibilities": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "bugsBehavior": {
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BugsBehavior"
          }
        },
        "defaultIteration": {
          "type": "string",
          "format": "uuid"
        },
        "defaultIterationMacro": {
          "type": "string"
        },
        "workingDays": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "DayOfWeek"
          }
        }
      }
    },
    "TimelineCriteriaStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "oK",
            "invalidFilterClause",
            "unknown"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.TimelineCriteriaStatusCode"
          }
        }
      }
    },
    "TimelineIterationStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "oK",
            "isOverlapping"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.TimelineIterationStatusCode"
          }
        }
      }
    },
    "TimelineTeamData": {
      "description": "",
      "type": "object",
      "properties": {
        "backlog": {
          "description": "Backlog matching the mapped backlog associated with this team.",
          "$ref": "#/definitions/BacklogLevel"
        },
        "fieldReferenceNames": {
          "description": "The field reference names of the work item data",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "The id of the team",
          "type": "string",
          "format": "uuid"
        },
        "isExpanded": {
          "description": "Was iteration and work item data retrieved for this team. <remarks> Teams with IsExpanded false have not had their iteration, work item, and field related data queried and will never contain this data. If true then these items are queried and, if there are items in the queried range, there will be data. </remarks>",
          "type": "boolean"
        },
        "iterations": {
          "description": "The iteration data, including the work items, in the queried date range.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineTeamIteration"
          }
        },
        "name": {
          "description": "The name of the team",
          "type": "string"
        },
        "orderByField": {
          "description": "The order by field name of this team",
          "type": "string"
        },
        "partiallyPagedFieldReferenceNames": {
          "description": "The field reference names of the partially paged work items, such as ID, WorkItemType",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectId": {
          "description": "The project id the team belongs team",
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "description": "Status for this team.",
          "$ref": "#/definitions/TimelineTeamStatus"
        },
        "teamFieldDefaultValue": {
          "description": "The team field default value",
          "type": "string"
        },
        "teamFieldName": {
          "description": "The team field name of this team",
          "type": "string"
        },
        "teamFieldValues": {
          "description": "The team field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        },
        "workItemTypeColors": {
          "description": "Colors for the work item types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemColor"
          }
        }
      }
    },
    "TimelineTeamIteration": {
      "description": "",
      "type": "object",
      "properties": {
        "finishDate": {
          "description": "The end date of the iteration",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "The iteration name",
          "type": "string"
        },
        "partiallyPagedWorkItems": {
          "description": "All the partially paged workitems in this iteration.",
          "type": "array",
          "items": {
            "type": "array"
          }
        },
        "path": {
          "description": "The iteration path",
          "type": "string"
        },
        "startDate": {
          "description": "The start date of the iteration",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "The status of this iteration",
          "$ref": "#/definitions/TimelineIterationStatus"
        },
        "workItems": {
          "description": "The work items that have been paged in this iteration",
          "type": "array",
          "items": {
            "type": "array"
          }
        }
      }
    },
    "TimelineTeamStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "oK",
            "doesntExistOrAccessDenied",
            "maxTeamsExceeded",
            "maxTeamFieldsExceeded",
            "backlogInError",
            "missingTeamFieldValue",
            "noIterationsExist"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.TimelineTeamStatusCode"
          }
        }
      }
    },
    "UpdatePlan": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "name": {
          "description": "Name of the plan to create.",
          "type": "string"
        },
        "properties": {
          "description": "Plan properties.",
          "type": "object"
        },
        "revision": {
          "description": "Revision of the plan that was updated - the value used here should match the one the server gave the client in the Plan.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the plan",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanType"
          }
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemColor": {
      "description": "Work item color and icon.",
      "type": "object",
      "properties": {
        "icon": {
          "type": "string"
        },
        "primaryColor": {
          "type": "string"
        },
        "workItemTypeName": {
          "type": "string"
        }
      }
    },
    "WorkItemFieldReference": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "referenceName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemTrackingResourceReference": {
      "description": "",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeReference": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeStateInfo": {
      "description": "",
      "type": "object",
      "properties": {
        "states": {
          "description": "State name to state category map",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workItemTypeName": {
          "description": "Work Item type name",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries and to receive notifications about work item events via service hooks.",
        "vso.work_write": "Grants the ability to read, create, and update work items and queries, update board metadata, read area and iterations paths other work item tracking related metadata, execute queries, and to receive notifications about work item events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  },
  "x-internal-service-name": "Work",
  "x-internal-toc-name": "Cardsettings",
  "x-internal-split-members": [
    {
      "displayName": "Get Get Get Get Get t",
      "relativePath": "Cardsettings/Cardsettings_Get"
    },
    {
      "displayName": "Update Update Update e",
      "relativePath": "Cardsettings/Cardsettings_Update"
    }
  ],
  "x-internal-split-type": "TagOperation"
}